{"pageProps":{"post":{"live":true,"readingTime":"6 min read","title":"A React Component to connect with MetaMask","date":"2021-12-20T00:00:00.322Z","slug":"connect-wallet-react-component","coverImage":"/assets/images/posts/react-metamask.webp","collection":{"name":"React","primaryColor":"#61DAFB","primaryColorLight":"#61dafb82","contrastColor":"#222","logo":"/assets/images/collections/react.webp","emoji":"","slug":"react"},"excerpt":"In this post, we are going to build a React button able to connect with a Metamask Wallet, and read the wallet's selected address.","content":"\nWeb3 is a new, revolutionary, and (very) controversial phenomenon, becoming harder and harder to ignore.\n\nWhether you are fascinated by it or not, it's undeniable that its consequences are far-reaching; many developers are re-training to get up to speed with it.\n\nAs I started working on a task for requesting users to connect their wallet to retrieve their MetaMask address, I had the opportunity to work with a Web3 wallet for the first time.\n\n## What's a Wallet?\n\nIf you do not know what MetaMask is, here is a short explanation: MetaMask is a digital wallet living in your browser as an extension; you can use it to keep, transfer or move various cryptocurrencies and NFTs. \n\nFurthermore, web3 websites can request to connect with said wallet, and if authorized, perform actions on behalf of the owners. \n\nFor example, you can connect the wallet to OpenSea (or any other marketplace) and buy an NFT, or connect to PancakeSwap to swap tokens with other ones.\n\n## Building the Component\n\nWhile being a blockchain engineer involves writing custom *smart contracts*, protocols, etc., it's slightly ironic that web3, as revolutionary as claimed, will still be primarily built using web2 technologies. \n\nThat means tons of Javascript (which is a little bit embarrassing to acknowledge when hacks happen due to this fact).\n\nIn short: **we still need the good old Javascript** to build on top of web3, so let's see how we can get started with a simple component, which, thanks to the MetaMask wallet, allows us to **request the user's account of choice using the API** exposed by the Chrome extension.\n\n### Extending Window\n\nWe need to extend the Window with the MetaMask API as we use Typescript.\n\nThe extension exposes an object named `ethereum` which provides the necessary API to interact with the wallet.\n\nWe will add the script below globally or within the same Component's file:\n\n```tsx\ndeclare global {\n  interface Window {\n    ethereum: {\n      request<T>(params: { method: string }): Promise<T>;\n      on<T>(event: string, cb: (params: T) => void): void;\n      removeListener<T>(event: string, cb: (params: T) => void): void;\n      selectedAddress: string | undefined;\n    };\n  }\n}\n```\n\n### Component Basics\n\nAnd now we can start writing the component. \n\nLet's layout a basic `ConnectWalletButton` component:\n\n```tsx\nimport React from \"react\";\n\nconst ConnectWalletButton: React.FC<{\n  onConnect: (address: string | undefined) => void\n}> = ({ onConnect }) => {\n  // implementation\n};\n\nexport default ConnectWalletButton;\n```\n\nAnd now we can import it in our `App`:\n\n```tsx\nimport \"./styles.css\";\nimport ConnectWalletButton from \"./ConnectWalletButton\";\n\nexport default function App() {\n  const [selectedAddress, setSelectedAddress] = useState<string>();\n  \n  const addressChanged = useCallback((address: string | undefined) => {\n    setSelectedAddress(address);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Connect with MetaMask Demo</h1>\n\n      <ConnectWalletButton onChange={addressChanged} />\n    </div>\n  );\n}\n```\n\nWe defined a callback to read the address from the button's parent. \n\nThe above is a decent solution if you want to read the address locally. Otherwise, should you need to read it globally, it would be better to use any state-management tool like the `Context API` or more complex stuff like Zustand, Redux, etc.\n\nLet's add just enough CSS to make it look good-ish:\n\n```css\nbutton {\n  padding: 0.75rem 1.5rem;\n  border-radius: 30px;\n  font-size: 1rem;\n  background-color: #03a9f4;\n  color: #fff;\n  font-weight: 600;\n  border-width: 0;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #039be5;\n}\n\nbutton:active {\n  background-color: #0288d1;\n}\n```\n\n### Using the MetaMask Ethereum API\n\nAnd now on to the actual logic. \n\nIf you paid attention when we extended `Window`, we have added two methods to the `ethereum` global object (just enough to make this component work because there are a lot more).\n\n- The first method is `request`: by calling it, we can request actions, which in this case will be `eth_requestAccounts`\n- The second method is `on`: by calling it, we can listen to specific events, for example, when the wallet's account has changed\n- The third method `removeListener` will be used to clean up the callback and avoid memory leaks when the component is unmounted\n\n#### Goals\n\nWhat will the component do?\n- Prompt users to Connect their wallet\n- Display the address if connected\n- Emit an event with the address when it changes\n- Automatically update if the user updates the address or disconnects from MetaMask\n\n#### Implementation\n\nLet's start implementing the goals above. \n\nFirst, we want to check if the MetaMask extension is installed, otherwise we'll run into runtime errors. For simplicity, we simply check if `window.ethereum` exists:\n\n```tsx\nfunction isMetaMaskInstalled() {\n  return Boolean(window.ethereum);\n}\n```\n\nThen, we define an async function which lets us request and read the address from MetaMask:\n\n```tsx\nasync function readAddress() {\n  const method = \"eth_requestAccounts\";\n\n  const accounts = await window.ethereum.request<string[]>({\n    method\n  });\n\n  // for simplicity, let's return the first account in the list\n  return accounts[0];\n}\n\nfunction getSelectedAddress() {\n  return window.ethereum?.selectedAddress;\n}\n```\n\nWe want to store the address because it can also mutate from the outside. \n\nBecause the wallet may already be connected when the component mounts, we initialize it with the property `selectedAddress`, if found:\n\n\n```tsx\nconst [address, setAddress] = useState<string>(\n  getSelectedAddress()\n);\n```\n\nLet's define a function which will read and store the address:\n\n```tsx\nconst connectWallet = async () => {\n  const selectedAddress = await readAddress();\n\n  setAddress(selectedAddress);\n  onChange(selectedAddress);\n};\n```\n\nWe now need to listen for changes from the extension so that we can update the component accordingly.\n\nIn fact, users can change the current address or disconnect the website using the MetaMask extension:\n\n```tsx\nuseEffect(() => {\n  const eventName = `accountsChanged`;\n  \n  // break if metamask not installed\n  if (!isMetaMaskInstalled()) return;\n\n  const listener = ([selectedAddress]: string[]) => {\n    setAddress(selectedAddress);\n    onChange(selectedAddress);\n  };\n\n  // listen for updates\n  window.ethereum.on(eventName, listener);\n  \n  // clean up on unmount\n  return () => {\n    window.ethereum.removeListener(eventName, listener);\n  };\n}, []);\n```\n\nWhat happens here?\n- we listen for updates using the `on` method, and update the current address using the first element in the list\n- when the component unmounts, we call the `removeListener` method so we can clean everything up\n\nNow, we can finally render our component. \n\nIf MetaMask is not installed, we warn user they cannot connect, and need to install the extension first:\n\n```tsx\nif (!isMetaMaskInstalled()) {\n  return <span>No wallet found. Please install MetaMask.<span/>;\n}\n```\n\nIf a wallet is connected, we simply display its selected address:\n\n```tsx\nif (address) {\n  return <button>Connected with {address}</button>;\n}\n```\n\nIf a wallet is not connected, we prompt to connect:\n\n```tsx \nreturn <button onClick={connectWallet}>Connect Wallet</button>;\n```\n\n## Demo\n\nDo you have a MetaMask wallet? \n\nAwesome, you can try the demo below to try out the code we've written! Also, you can find the complete snippet:\n\n<CodeSandboxSnippet src='https://codesandbox.io/embed/react-component-connect-metamask-zpcql?fontsize=14&hidenavigation=1&theme=dark' />\n\n## Final Words\n\nI know, I know. Web3 is controversial. \n\nI have some reservations myself, but with that said, I also feel like it's good to keep an open mind about the technology and how it's shaping up the new tools we're going to use in the future probably.\n\nI hope to make more posts about this as I dig further into the space. To the next one, ciao!","tags":["react","next","web3"]},"content":{"compiledSource":"var l=Object.defineProperty,d=Object.defineProperties;var i=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var m=(e,n,s)=>n in e?l(e,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[n]=s,a=(e,n)=>{for(var s in n||(n={}))o.call(n,s)&&m(e,s,n[s]);if(p)for(var s of p(n))c.call(n,s)&&m(e,s,n[s]);return e},r=(e,n)=>d(e,i(n));var N=(e,n)=>{var s={};for(var t in e)o.call(e,t)&&n.indexOf(t)<0&&(s[t]=e[t]);if(e!=null&&p)for(var t of p(e))n.indexOf(t)<0&&c.call(e,t)&&(s[t]=e[t]);return s};const makeShortcode=e=>function(s){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",a({},s))},CodeSandboxSnippet=makeShortcode(\"CodeSandboxSnippet\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:e}=t,n=N(t,[\"components\"]);return mdx(MDXLayout,r(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Web3 is a new, revolutionary, and (very) controversial phenomenon, becoming harder and harder to ignore.\"),mdx(\"p\",null,\"Whether you are fascinated by it or not, it's undeniable that its consequences are far-reaching; many developers are re-training to get up to speed with it.\"),mdx(\"p\",null,\"As I started working on a task for requesting users to connect their wallet to retrieve their MetaMask address, I had the opportunity to work with a Web3 wallet for the first time.\"),mdx(\"h2\",null,\"What's a Wallet?\"),mdx(\"p\",null,\"If you do not know what MetaMask is, here is a short explanation: MetaMask is a digital wallet living in your browser as an extension; you can use it to keep, transfer or move various cryptocurrencies and NFTs. \"),mdx(\"p\",null,\"Furthermore, web3 websites can request to connect with said wallet, and if authorized, perform actions on behalf of the owners. \"),mdx(\"p\",null,\"For example, you can connect the wallet to OpenSea (or any other marketplace) and buy an NFT, or connect to PancakeSwap to swap tokens with other ones.\"),mdx(\"h2\",null,\"Building the Component\"),mdx(\"p\",null,\"While being a blockchain engineer involves writing custom \",mdx(\"em\",{parentName:\"p\"},\"smart contracts\"),\", protocols, etc., it's slightly ironic that web3, as revolutionary as claimed, will still be primarily built using web2 technologies. \"),mdx(\"p\",null,\"That means tons of Javascript (which is a little bit embarrassing to acknowledge when hacks happen due to this fact).\"),mdx(\"p\",null,\"In short: \",mdx(\"strong\",{parentName:\"p\"},\"we still need the good old Javascript\"),\" to build on top of web3, so let's see how we can get started with a simple component, which, thanks to the MetaMask wallet, allows us to \",mdx(\"strong\",{parentName:\"p\"},\"request the user's account of choice using the API\"),\" exposed by the Chrome extension.\"),mdx(\"h3\",null,\"Extending Window\"),mdx(\"p\",null,\"We need to extend the Window with the MetaMask API as we use Typescript.\"),mdx(\"p\",null,\"The extension exposes an object named \",mdx(\"inlineCode\",{parentName:\"p\"},\"ethereum\"),\" which provides the necessary API to interact with the wallet.\"),mdx(\"p\",null,\"We will add the script below globally or within the same Component's file:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"declare\"),\" global \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"interface\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"Window\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    ethereum`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"request\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token constant\"}),\"T\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"params\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" method\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token known-class-name class-name\"}),\"Promise\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"T\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"on\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token constant\"}),\"T\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"event\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"cb\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),\"params\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token constant\"}),\"T\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"void\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"void\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"removeListener\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token constant\"}),\"T\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"event\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"cb\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),\"params\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token constant\"}),\"T\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"void\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"void\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n      selectedAddress`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"undefined\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"h3\",null,\"Component Basics\"),mdx(\"p\",null,\"And now we can start writing the component. \"),mdx(\"p\",null,\"Let's layout a basic \",mdx(\"inlineCode\",{parentName:\"p\"},\"ConnectWalletButton\"),\" component:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"import\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token imports\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"React\")),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"from\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"react\"'),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ConnectWalletButton\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"React\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"FC\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"onConnect\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),\"address\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" string \",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token keyword nil\"}),\"undefined\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"void\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" onConnect \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// implementation\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"default\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ConnectWalletButton\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"And now we can import it in our \",mdx(\"inlineCode\",{parentName:\"p\"},\"App\"),\":\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"import\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"./styles.css\"'),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"import\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token imports\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"ConnectWalletButton\")),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"from\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"./ConnectWalletButton\"'),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"default\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"App\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"selectedAddress\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" setSelectedAddress\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"useState\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  \n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" addressChanged \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"useCallback\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),\"address\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" string \",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token keyword nil\"}),\"undefined\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"setSelectedAddress\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"address\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"div\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"className\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-value\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation attr-equals\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"'),\"App\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"')),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"h1\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"Connect with MetaMask Demo\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"h1\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token class-name\"}),\"ConnectWalletButton\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"onChange\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token script language-javascript\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token script-punctuation punctuation\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"addressChanged\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"/>\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"    \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"div\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"We defined a callback to read the address from the button's parent. \"),mdx(\"p\",null,\"The above is a decent solution if you want to read the address locally. Otherwise, should you need to read it globally, it would be better to use any state-management tool like the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Context API\"),\" or more complex stuff like Zustand, Redux, etc.\"),mdx(\"p\",null,\"Let's add just enough CSS to make it look good-ish:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-css\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-css\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token selector\"}),\"button\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"padding\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"0.75\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token unit\"}),\"rem\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"1.5\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token unit\"}),\"rem\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"border-radius\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"30\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token unit\"}),\"px\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"font-size\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"1\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token unit\"}),\"rem\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"background-color\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token hexcode color\"}),\"#03a9f4\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"color\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token hexcode color\"}),\"#fff\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"font-weight\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"600\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"border-width\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"0\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"cursor\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" pointer\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token selector\"}),\"button\",mdx(\"span\",a({parentName:\"span\"},{className:\"token pseudo-class\"}),\":hover\")),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"background-color\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token hexcode color\"}),\"#039be5\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token selector\"}),\"button\",mdx(\"span\",a({parentName:\"span\"},{className:\"token pseudo-class\"}),\":active\")),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"background-color\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token hexcode color\"}),\"#0288d1\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"h3\",null,\"Using the MetaMask Ethereum API\"),mdx(\"p\",null,\"And now on to the actual logic. \"),mdx(\"p\",null,\"If you paid attention when we extended \",mdx(\"inlineCode\",{parentName:\"p\"},\"Window\"),\", we have added two methods to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"ethereum\"),\" global object (just enough to make this component work because there are a lot more).\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"The first method is \",mdx(\"inlineCode\",{parentName:\"li\"},\"request\"),\": by calling it, we can request actions, which in this case will be \",mdx(\"inlineCode\",{parentName:\"li\"},\"eth_requestAccounts\")),mdx(\"li\",{parentName:\"ul\"},\"The second method is \",mdx(\"inlineCode\",{parentName:\"li\"},\"on\"),\": by calling it, we can listen to specific events, for example, when the wallet's account has changed\"),mdx(\"li\",{parentName:\"ul\"},\"The third method \",mdx(\"inlineCode\",{parentName:\"li\"},\"removeListener\"),\" will be used to clean up the callback and avoid memory leaks when the component is unmounted\")),mdx(\"h4\",null,\"Goals\"),mdx(\"p\",null,\"What will the component do?\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Prompt users to Connect their wallet\"),mdx(\"li\",{parentName:\"ul\"},\"Display the address if connected\"),mdx(\"li\",{parentName:\"ul\"},\"Emit an event with the address when it changes\"),mdx(\"li\",{parentName:\"ul\"},\"Automatically update if the user updates the address or disconnects from MetaMask\")),mdx(\"h4\",null,\"Implementation\"),mdx(\"p\",null,\"Let's start implementing the goals above. \"),mdx(\"p\",null,\"First, we want to check if the MetaMask extension is installed, otherwise we'll run into runtime errors. For simplicity, we simply check if \",mdx(\"inlineCode\",{parentName:\"p\"},\"window.ethereum\"),\" exists:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"isMetaMaskInstalled\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token known-class-name class-name\"}),\"Boolean\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token dom variable\"}),\"window\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),\"ethereum\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"Then, we define an async function which lets us request and read the address from MetaMask:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"async\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"readAddress\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" method \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"eth_requestAccounts\"'),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" accounts \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"await\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token dom variable\"}),\"window\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),\"ethereum\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),\"request\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    method\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// for simplicity, let's return the first account in the list\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" accounts\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"0\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"getSelectedAddress\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token dom variable\"}),\"window\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),\"ethereum\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"?.\"),\"selectedAddress\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"We want to store the address because it can also mutate from the outside. \"),mdx(\"p\",null,\"Because the wallet may already be connected when the component mounts, we initialize it with the property \",mdx(\"inlineCode\",{parentName:\"p\"},\"selectedAddress\"),\", if found:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"address\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" setAddress\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"useState\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"getSelectedAddress\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"Let's define a function which will read and store the address:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"connectWallet\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"async\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" selectedAddress \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"await\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"readAddress\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"setAddress\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"selectedAddress\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"onChange\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"selectedAddress\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"We now need to listen for changes from the extension so that we can update the component accordingly.\"),mdx(\"p\",null,\"In fact, users can change the current address or disconnect the website using the MetaMask extension:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"useEffect\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" eventName \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token template-string\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token template-punctuation string\"}),\"`\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"accountsChanged\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token template-punctuation string\"}),\"`\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  \n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// break if metamask not installed\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"if\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"!\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"isMetaMaskInstalled\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"listener\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"[\"),\"selectedAddress\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" string\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"]\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"setAddress\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"selectedAddress\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"onChange\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"selectedAddress\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// listen for updates\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token dom variable\"}),\"window\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),\"ethereum\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token method function property-access\"}),\"on\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"eventName\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" listener\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  \n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// clean up on unmount\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token dom variable\"}),\"window\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),\"ethereum\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token method function property-access\"}),\"removeListener\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"eventName\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" listener\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"What happens here?\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"we listen for updates using the \",mdx(\"inlineCode\",{parentName:\"li\"},\"on\"),\" method, and update the current address using the first element in the list\"),mdx(\"li\",{parentName:\"ul\"},\"when the component unmounts, we call the \",mdx(\"inlineCode\",{parentName:\"li\"},\"removeListener\"),\" method so we can clean everything up\")),mdx(\"p\",null,\"Now, we can finally render our component. \"),mdx(\"p\",null,\"If MetaMask is not installed, we warn user they cannot connect, and need to install the extension first:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"if\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"!\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"isMetaMaskInstalled\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"span\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"No wallet found. Please install MetaMask.\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"span\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"/>\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"}\"),`\n`))),mdx(\"p\",null,\"If a wallet is connected, we simply display its selected address:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"if\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"address\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"button\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"Connected with \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\"address\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"button\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"If a wallet is not connected, we prompt to connect:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"button\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"onClick\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token script language-javascript\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token script-punctuation punctuation\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"connectWallet\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"Connect Wallet\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"button\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"h2\",null,\"Demo\"),mdx(\"p\",null,\"Do you have a MetaMask wallet? \"),mdx(\"p\",null,\"Awesome, you can try the demo below to try out the code we've written! Also, you can find the complete snippet:\"),mdx(CodeSandboxSnippet,{src:\"https://codesandbox.io/embed/react-component-connect-metamask-zpcql?fontsize=14&hidenavigation=1&theme=dark\",mdxType:\"CodeSandboxSnippet\"}),mdx(\"h2\",null,\"Final Words\"),mdx(\"p\",null,\"I know, I know. Web3 is controversial. \"),mdx(\"p\",null,\"I have some reservations myself, but with that said, I also feel like it's good to keep an open mind about the technology and how it's shaping up the new tools we're going to use in the future probably.\"),mdx(\"p\",null,\"I hope to make more posts about this as I dig further into the space. To the next one, ciao!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"series":[],"morePosts":[{"live":true,"readingTime":"4 min read","title":"A conditional rendering Component for React","date":"2021-12-02T14:52:20.000Z","slug":"conditional-rendering-component-for-react","collection":{"name":"React","primaryColor":"#61DAFB","primaryColorLight":"#61dafb82","contrastColor":"#222","logo":"/assets/images/collections/react.webp","emoji":"","slug":"react"},"excerpt":"This post shows how to create a React component to render components conditionally."}],"moreArticles":[],"type":1},"__N_SSG":true}