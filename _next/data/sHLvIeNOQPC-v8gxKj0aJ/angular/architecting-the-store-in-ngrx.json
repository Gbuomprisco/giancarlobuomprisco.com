{"pageProps":{"post":{"live":true,"readingTime":"10 min read","title":"Architecting the Store","date":"2019-05-05T00:00:00.322Z","slug":"architecting-the-store-in-ngrx","coverImage":"/assets/images/posts/architecting-store-ngrx.png","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"A step-by-step guide to building and architecting the Store in NGRX","series":"State Management with NgRx","content":"\nThis is the second article of a series that aims to explain in detail a step-by-step approach to building an Angular application with NGRX.\n\nIn [the first article of this series](https://medium.com/r/?url=https%3A%2F%2Fitnext.io%2Fstate-management-with-ngrx-introduction-1aae0803e988), I wrote a small overview of all the concepts surrounding the NGRX platform.\n\nIf you have never worked with NGRX, or have never done something in-depth with, I’d really recommend you read it.\n\n### NGRX 8\n\nIn the previous article, the concepts were explained using the current NGRX version. In order to keep the articles up to date, from now on I will introduce and explain the same concepts using the latest features released in NGRX version 8. There’s some really cool stuff out!\n\nIn particular, we will look at how to create:\n\n*   actions with `createAction`\n*   reducers with `createReducer`\n*   effects with `createEffect` (in the next article)\n\n### What is this article about?\n\nIn this article instead, we will explore the process of building the entities that make up our store and will be setting up the entity adapter, the actions, and the reducers for each entity.\n\nAs a follow up to one of my previous articles about [creating a scalable folders structure](https://medium.com/r/?url=https%3A%2F%2Fitnext.io%2Fbuilding-an-enterprise-grade-angular-project-structure-f5be32533ba3), we will see an example of creating store modules as service modules imported by our domain module.\n\nWe will build an application that retrieves live crypto prices from [Coincap](https://medium.com/r/?url=https%3A%2F%2Fcoincap.io)\\*\\* and displays them in a customizable dashboard.\n\nWe will call this demo application _Cryptofolio,_ which I hope to publish at the end of this series.\n\n_\\*\\* I explored various websites for fetching live prices and Coincap was by far the easiest and clearer provider. Kudos to the team!_\n\n## Setting up Angular and NGRX\n\nLet’s see how to set up an Angular application and NGRX.\n\n### Angular CLI Workspace\n\nThe first thing you may want to do is to create a new application with Angular CLI and add the routing and style parameters.\n\n`ng new <app> --routing --style=scss`\n\n### NGRX\n\nLet’s install all the libraries needed to work with NGRX:\n\n`npm i @ngrx/store @ngrx/effects @ngrx/entity`\n\nAnd you’re pretty much all set!\n\n## Project’s Folder Structure\n\nLet’s take a brief look at the project structure I opted for:\n\n![](https://cdn-images-1.medium.com/max/1600/1*ZTWoVjCnGCJMMNUzxcdcUw.png)\n\n*   **What’s in store**?\n    Every folder in `store` is an Angular Service Module that simply sets up the NGRX store and effects for the Dashboard Module, which is a domain module where our application’s smart components are placed.\n\nLet’s take a look at the `DashboardStoreModule` which is still very simple:\n\n```typescript\n@NgModule({\n    imports: [\n        StoreModule.forFeature('dashboard', dashboardReducer),\n        // will import effects\n    ],\n    providers: [\n       // will import providers\n    ]\n})\nexport class DashboardStoreModule {}\n```\n\nThe `DashboardModule` will then import `DashboardStoreModule` and the other store modules:\n\n```typescript\n@NgModule({\n    declarations: [\n       // components\n    ],\n    imports: [\n        // store service modules_ DashboardStoreModule,\n        PricesStoreModule,\n        AssetsStoreModule,\n\n        // other modules\n    ],\n    exports: [RouterModule]\n})\nexport class DashboardModule {}\n```\n\n*   **Where is DashboardModule imported?**\nThe `DashboardModule` is a lazy-loaded module, so we do not import it from anywhere in our application, but instead, we reference it in our routing module configuration.\n\nIn order to make lazy-loaded feature modules work with NGRX, we need to call the forRoot method, although with empty values, for both the `StoreModule` and the `EffectsModule`.\n\n```typescript\n@NgModule({\n    declarations: [AppComponent],\n    imports: [\n        // other modules,\n        StoreModule.forRoot({}, { metaReducers }),\n        EffectsModule.forRoot([]),\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\n\n## Store Entities\n\nIn order to architect the store, we need to first analyze our data structures.\n\nAs I mentioned above, the application will feature a **dashboard** with **tiles**, and each widget will contain cryptocurrency price tickers. In order to retrieve to display the **prices**, we first need to load the **assets (cryptocurrencies)**.\n\nWe then have 4 different entities that we will use to build our fairly simple store:\n\n*   a dashboard that contains tiles (or widgets)\n*   a list of assets (cryptocurrencies)\n*   a price (for each asset subscribed)\n\n### Flat vs Nested Store\n\nWe have two ways of building the store:\n\n*   a nested structure, by directly adding prices to the assets store\n*   a flat structure, where assets and prices are separated into two separate objects and are only related based on the asset ID\n\nI personally prefer a flat structure. \n\n**Why?** I have, mistakenly, opted for nested structures in the past and I found the following issues:\n\n*   by adding a price directly to an asset, we’d be changing the original interface of the entity\n*   deeper, nested structures are more difficult to query\n\nIn this simple example, it doesn’t really affect greatly performance or complexity. However, if you plan on building a big application with a complex state, you will quickly see how the selectors and the store complexity creeping up as a result of a nested structure.\n\nMy advice is to keep the store as a flat structure of objects and keep the relations between them using unique values.\n\n## Dashboard Store\n\nFor simplicity, we will keep the dashboard fairly minimal. We only need two things from a widget:\n\n*   a tile ID\n*   an asset ID\n\nIn order to build this part of the store, we will use `@ngrx/entity` .\n\n### Tile class\n\nLet’s first create a class named `Tile` that represents the model of our state:\n\n```typescript\nexport class Tile {\n    public readonly id = uuid();\n\n    constructor(public assetId?: string) {}\n}\n```\n\nOf course, unless a tile is preloaded with an asset ID, the asset ID won’t be defined until the user decides which asset to display, which is why we mark as possibly `undefined`.\n\n### Dashboard Adapter\n\nWe move on and proceed to create the adapter for our state. Our state will simply be an entity state with a collection of tiles:\n\n```typescript\nexport const dashboardAdapter: EntityAdapter<Tile> = createEntityAdapter<\n    Tile\n>();\n```\n\n### Dashboard Actions\n\nIn order to create our actions, we will be using the new factory provided by NGRX 8 called `createAction` .\n\n```typescript\nexport enum DashboardActionTypes {\n    AddTile = '[Dashboard] ADD_TILE',\n    RemoveTile = '[Dashboard] REMOVE_TILE',\n    UpdateTile = '[Dashboard] UPDATE_TILE'\n}\n\nexport const addTile = createAction(\n    DashboardActionTypes.AddTile, // action name\n    props<{ payload: Tile }>() // action payload type\n);\n\nexport const removeTile = createAction(\n    DashboardActionTypes.RemoveTile,\n    props<{ payload: string }>()\n);\n\nexport const updateTile = createAction(\n    DashboardActionTypes.UpdateTile,\n    props<{ payload: Tile }>()\n);\n```\n\nTo summarise the code, we have created 3 actions:\n\n*   `addTile` whose payload is a `Tile` class\n*   `removeTile` which only receives a string as payload, which is the ID\n*   `updateTile` which also receives a `Tile` class\n\nNotice that `props` is a function that gets imported from `@ngrx/store` and gets called as a second argument.\n\n### Dashboard Reducer\n\nIn order to build the dashboard reducer, we will use the new factory method called `createReducer` that takes the following arguments:\n\n*   the first argument is the initial state, that we created using the entity adapter\n*   all the following arguments are the reducer functions for each action, that we define using the function `on` also imported from `@ngrx/store` \n*   we use the entity adapter methods in order to add, remove and update the dashboard’s tiles\n\n```typescript\n// we create the state by adding an empty tile_\n\nconst emptyTile = new Tile(undefined);\nconst initialState = dashboardAdapter.addOne(\n    emptyTile,\n    dashboardAdapter.getInitialState()\n);\n\nexport const dashboardReducerFn = createReducer(\n    initialState,\n    on(addTile, (state, { payload }) => {\n        return dashboardAdapter.addOne(payload, state);\n    }),\n    on(removeTile, (state, { payload }) => {\n        return dashboardAdapter.removeOne(payload, state);\n    }),\n    on(updateTile, (state, { payload }: { payload: Tile }) => {\n        return dashboardAdapter.updateOne(\n            { id: payload.id, changes: { assetId: payload.assetId } },\n            state\n        );\n    })\n);\n\nexport function dashboardReducer(\n    state = initialState,\n    action: Action\n): EntityState<Tile> {\n    return dashboardReducerFn(state, action);\n}\n```\n\nWe import the reducer in the `DashboardStoreModule` :\n\n```typescript\n@NgModule({\n    imports: [\n         StoreModule.forFeature('dashboard', dashboardReducer),\n    ]\n// more\n```\n\n## Assets Store\n\nAs we are going to receive the list of assets using Coincap’s API, we’re just going to replicate their interface:\n\n```typescript\nexport interface Asset {\n    id: string;\n    rank: string;\n    symbol: string;\n    name: string;\n    supply: string;\n    maxSupply: string | null;\n    marketCapUsd: string;\n    volumeUsd24Hr: string;\n    priceUsd: string;\n    changePercent24Hr: string;\n    vwap24Hr: string;\n}\n```\n\n### Assets Actions\n\nIn order to fetch the assets, we will need to perform an HTTP request to Coincap’s API. The HTTP action will be going through the effect method we’re going to define in the next article. \n\nWhat’s important to notice here is the way I’ve broken up the assets’ _actions_:\n\n*   **getAssetsRequestStarted:**\n    action that gets dispatched when the request starts\n*   **getAssetsRequestSuccess:**\n    action that gets dispatched when the request succeeded (no error actions in this case for simplicity, but you should always create them)\n*   **addAssets:**\n    action that will only be used by the reducer, which is a command to add assets to the store\n\n```typescript\nexport enum AssetsActionsTypes {\n    GetAssetsRequestStarted = '[Assets API] GET_ASSETS_REQUEST_STARTED',\n    GetAssetsRequestSuccess = '[Assets API] GET_ASSETS_REQUEST_SUCCESS',\n    AddAssets = '[Assets] ADD_ASSETS'\n}\n\nexport const getAssetsRequestStarted = createAction(\n    AssetsActionsTypes.GetAssetsRequestStarted,\n    props<{ payload: string[] }>()\n);\n\nexport const getAssetsRequestSuccess = createAction(\n    AssetsActionsTypes.GetAssetsRequestSuccess,\n    props<{ payload: Asset[] }>()\n);\n\nexport const addAssets = createAction(\n    AssetsActionsTypes.AddAssets,\n    props<{ payload: Asset[] }>()\n);\n```\n\n### Assets Reducer and Adapter\n\nThe only reducer function reacting to the _addAssets_ action will simply add all the assets to the store once they get fetched.\n\n```typescript\n// adapter\nexport const assetsAdapter: EntityAdapter<Asset> = createEntityAdapter<Asset>({\n    selectId: (asset: Asset) => asset.id\n});\n\n// reducer\nconst initialState = assetsAdapter.getInitialState();\n\nexport const assetsReducerFn = createReducer(\n    initialState,\n    on(addAssets, (state, { payload }) => {\n        return assetsAdapter.addAll(payload, state);\n    })\n);\n\nexport function assetsReducer(\n    state: EntityState<Asset> | undefined,\n    action: Action\n) {\n    return assetsReducerFn(state, action);\n}\n```\n\n## Prices Store\n\nThe prices returned by Coincap’s API are very simple and are just objects with the key of an asset and its relative price. As such, we have a very simple store for prices.\n\n### Prices Actions\n\nWe will be creating 3 actions:\n\n*   **addPrice**:\n    action for updating the store once a price is received\n*   **createPriceSubscription**:\n    action for creating a subscription\n*   **closePriceSubscription**:\n    action for closing a subscription\n\n```typescript\nexport enum PricesActionsTypes {\n    AddPrice = '[Prices Store] ADD_PRICE',\n    CreatePriceSubscription = '[Prices Stream] CREATE_PRICE_SUBSCRIPTION',\n    ClosePriceSubscription = '[Prices Stream] CLOSE_PRICE_SUBSCRIPTION',\n    PriceReceived = '[Prices Stream] PRICE_RECEIVED'\n}\n\nexport const addPrice = createAction(\n    PricesActionsTypes.AddPrice,\n    props<{ payload: Price }>()\n);\n\nexport const createPriceSubscription = createAction(\n    PricesActionsTypes.CreatePriceSubscription,\n    props<{ payload: string }>()\n);\n\nexport const closePriceSubscription = createAction(\n    PricesActionsTypes.ClosePriceSubscription\n);\n\nexport const priceReceived = createAction(\n    PricesActionsTypes.PriceReceived,\n    props<{ payload: Price }>()\n);\n```\n\n### Prices Reducer\n\nAs the prices returned by Coincap’s real-time API are simply a key with the asset and its price, we really don’t need to do much with the entity framework.\n\nIndeed, for each price received, we simply set the key with the asset ID in our store and its price by spreading the price objects with the new payload.\n\nIf it doesn’t exist, it gets created, otherwise, it gets overwritten with its newest value.\n\nImagine our state is:\n\n```\n{ \"bitcoin\": \"some price\" };\n```\n\nAnd our payload from the WebSocket’s stream is:\n```\n{ \"ethereum\": \"another price\" }\n```\nThis will simply become:\n```\n{\n    \"bitcoin\": \"some price\",\n    \"ethereum\": \"another price\"\n};\n```\n\nAnd here is the code with one simple action:\n\n```typescript\nconst initialState: PriceState = {};\n\nexport const pricesReducerFn = createReducer(\n    initialState,\n    on(addPrice, (state, { payload }) => {\n        return { ...state, ...payload };\n    })\n);\n\nexport function pricesReducer(\n    state = initialState,\n    action: Action\n): PriceState {\n    return pricesReducerFn(state, action);\n}\n```\n## An overview of the Store\n\nLet’s take a look at the store with some data:\n\n![](https://cdn-images-1.medium.com/max/2400/1*3U_DkFj1rvw_cCxWyAph4g.png)\n\nType caption for image (optional)\n\n*   We have fetched 5 assets\n*   We have one, empty tile\n*   We have no prices, as the tile has not been subscribed to an asset\n\n## Takeaways\n\n*   Lay out your application entities and analyze how they relate between each other in order to have a clear understanding of what the store’s structure could look like\n*   Use NGRX Entity! It’s a great tool to reduce the boilerplate of your reducers\n*   Separate your UI modules from the store using Store Service Modules\n*   Prefer a flat structure over a nested one\n*   Keep actions clear and granular, distinguish between commands and events\n\n---\n\nIn the next article, we're going to build the effects that are responsible for fetching assets and prices from Coincap’s API.\n\nRead it at the link below:\n[Building Side Effects in NGRX](https://medium.com/r/?url=https%3A%2F%2Fitnext.io%2Fbuilding-side-effects-in-ngrx-deb0d856096d)\n\n---\n\nHope you enjoyed the article and send me a message if you agree, disagree, or would do anything differently!\n","tags":["ngrx","angular"]},"content":{"compiledSource":"var i=Object.defineProperty,l=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var r=(e,n,s)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[n]=s,a=(e,n)=>{for(var s in n||(n={}))o.call(n,s)&&r(e,s,n[s]);if(p)for(var s of p(n))c.call(n,s)&&r(e,s,n[s]);return e},m=(e,n)=>l(e,d(n));var N=(e,n)=>{var s={};for(var t in e)o.call(e,t)&&n.indexOf(t)<0&&(s[t]=e[t]);if(e!=null&&p)for(var t of p(e))n.indexOf(t)<0&&c.call(e,t)&&(s[t]=e[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:e}=t,n=N(t,[\"components\"]);return mdx(MDXLayout,m(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"This is the second article of a series that aims to explain in detail a step-by-step approach to building an Angular application with NGRX.\"),mdx(\"p\",null,\"In \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://medium.com/r/?url=https%3A%2F%2Fitnext.io%2Fstate-management-with-ngrx-introduction-1aae0803e988\"}),\"the first article of this series\"),\", I wrote a small overview of all the concepts surrounding the NGRX platform.\"),mdx(\"p\",null,\"If you have never worked with NGRX, or have never done something in-depth with, I\\u2019d really recommend you read it.\"),mdx(\"h3\",null,\"NGRX 8\"),mdx(\"p\",null,\"In the previous article, the concepts were explained using the current NGRX version. In order to keep the articles up to date, from now on I will introduce and explain the same concepts using the latest features released in NGRX version 8. There\\u2019s some really cool stuff out!\"),mdx(\"p\",null,\"In particular, we will look at how to create:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"actions with \",mdx(\"inlineCode\",{parentName:\"li\"},\"createAction\")),mdx(\"li\",{parentName:\"ul\"},\"reducers with \",mdx(\"inlineCode\",{parentName:\"li\"},\"createReducer\")),mdx(\"li\",{parentName:\"ul\"},\"effects with \",mdx(\"inlineCode\",{parentName:\"li\"},\"createEffect\"),\" (in the next article)\")),mdx(\"h3\",null,\"What is this article\\xA0about?\"),mdx(\"p\",null,\"In this article instead, we will explore the process of building the entities that make up our store and will be setting up the entity adapter, the actions, and the reducers for each entity.\"),mdx(\"p\",null,\"As a follow up to one of my previous articles about \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://medium.com/r/?url=https%3A%2F%2Fitnext.io%2Fbuilding-an-enterprise-grade-angular-project-structure-f5be32533ba3\"}),\"creating a scalable folders structure\"),\", we will see an example of creating store modules as service modules imported by our domain module.\"),mdx(\"p\",null,\"We will build an application that retrieves live crypto prices from \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://medium.com/r/?url=https%3A%2F%2Fcoincap.io\"}),\"Coincap\"),\"*\",\"*\",\" and displays them in a customizable dashboard.\"),mdx(\"p\",null,\"We will call this demo application \",mdx(\"em\",{parentName:\"p\"},\"Cryptofolio,\"),\" which I hope to publish at the end of this series.\"),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"*\",\"*\",\" I explored various websites for fetching live prices and Coincap was by far the easiest and clearer provider. Kudos to the team!\")),mdx(\"h2\",null,\"Setting up Angular and\\xA0NGRX\"),mdx(\"p\",null,\"Let\\u2019s see how to set up an Angular application and NGRX.\"),mdx(\"h3\",null,\"Angular CLI Workspace\"),mdx(\"p\",null,\"The first thing you may want to do is to create a new application with Angular CLI and add the routing and style parameters.\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"ng new <app> --routing --style=scss\")),mdx(\"h3\",null,\"NGRX\"),mdx(\"p\",null,\"Let\\u2019s install all the libraries needed to work with NGRX:\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"npm i @ngrx/store @ngrx/effects @ngrx/entity\")),mdx(\"p\",null,\"And you\\u2019re pretty much all set!\"),mdx(\"h2\",null,\"Project\\u2019s Folder Structure\"),mdx(\"p\",null,\"Let\\u2019s take a brief look at the project structure I opted for:\"),mdx(\"p\",null,mdx(\"img\",a({parentName:\"p\"},{src:\"https://cdn-images-1.medium.com/max/1600/1*ZTWoVjCnGCJMMNUzxcdcUw.png\",alt:null}))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"What\\u2019s in store\"),`?\nEvery folder in `,mdx(\"inlineCode\",{parentName:\"li\"},\"store\"),\" is an Angular Service Module that simply sets up the NGRX store and effects for the Dashboard Module, which is a domain module where our application\\u2019s smart components are placed.\")),mdx(\"p\",null,\"Let\\u2019s take a look at the \",mdx(\"inlineCode\",{parentName:\"p\"},\"DashboardStoreModule\"),\" which is still very simple:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"NgModule\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    imports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n        StoreModule`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"forFeature\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'dashboard'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" dashboardReducer\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// will import effects\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    providers`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n       `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// will import providers\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"DashboardStoreModule\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"DashboardModule\"),\" will then import \",mdx(\"inlineCode\",{parentName:\"p\"},\"DashboardStoreModule\"),\" and the other store modules:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"NgModule\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    declarations`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n       `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// components\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    imports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// store service modules_ DashboardStoreModule,\"),`\n        PricesStoreModule`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n        AssetsStoreModule`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// other modules\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    exports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"RouterModule\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"DashboardModule\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Where is DashboardModule imported?\"),`\nThe `,mdx(\"inlineCode\",{parentName:\"li\"},\"DashboardModule\"),\" is a lazy-loaded module, so we do not import it from anywhere in our application, but instead, we reference it in our routing module configuration.\")),mdx(\"p\",null,\"In order to make lazy-loaded feature modules work with NGRX, we need to call the forRoot method, although with empty values, for both the \",mdx(\"inlineCode\",{parentName:\"p\"},\"StoreModule\"),\" and the \",mdx(\"inlineCode\",{parentName:\"p\"},\"EffectsModule\"),\".\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"NgModule\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    declarations`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"AppComponent\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    imports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// other modules,\"),`\n        StoreModule`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"forRoot\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" metaReducers \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n        EffectsModule`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"forRoot\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    bootstrap`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"AppComponent\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"AppModule\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"h2\",null,\"Store Entities\"),mdx(\"p\",null,\"In order to architect the store, we need to first analyze our data structures.\"),mdx(\"p\",null,\"As I mentioned above, the application will feature a \",mdx(\"strong\",{parentName:\"p\"},\"dashboard\"),\" with \",mdx(\"strong\",{parentName:\"p\"},\"tiles\"),\", and each widget will contain cryptocurrency price tickers. In order to retrieve to display the \",mdx(\"strong\",{parentName:\"p\"},\"prices\"),\", we first need to load the \",mdx(\"strong\",{parentName:\"p\"},\"assets (cryptocurrencies)\"),\".\"),mdx(\"p\",null,\"We then have 4 different entities that we will use to build our fairly simple store:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"a dashboard that contains tiles (or widgets)\"),mdx(\"li\",{parentName:\"ul\"},\"a list of assets (cryptocurrencies)\"),mdx(\"li\",{parentName:\"ul\"},\"a price (for each asset subscribed)\")),mdx(\"h3\",null,\"Flat vs Nested\\xA0Store\"),mdx(\"p\",null,\"We have two ways of building the store:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"a nested structure, by directly adding prices to the assets store\"),mdx(\"li\",{parentName:\"ul\"},\"a flat structure, where assets and prices are separated into two separate objects and are only related based on the asset ID\")),mdx(\"p\",null,\"I personally prefer a flat structure.\\xA0\"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Why?\"),\" I have, mistakenly, opted for nested structures in the past and I found the following issues:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"by adding a price directly to an asset, we\\u2019d be changing the original interface of the entity\"),mdx(\"li\",{parentName:\"ul\"},\"deeper, nested structures are more difficult to query\")),mdx(\"p\",null,\"In this simple example, it doesn\\u2019t really affect greatly performance or complexity. However, if you plan on building a big application with a complex state, you will quickly see how the selectors and the store complexity creeping up as a result of a nested structure.\"),mdx(\"p\",null,\"My advice is to keep the store as a flat structure of objects and keep the relations between them using unique values.\"),mdx(\"h2\",null,\"Dashboard Store\"),mdx(\"p\",null,\"For simplicity, we will keep the dashboard fairly minimal. We only need two things from a widget:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"a tile ID\"),mdx(\"li\",{parentName:\"ul\"},\"an asset ID\")),mdx(\"p\",null,\"In order to build this part of the store, we will use \",mdx(\"inlineCode\",{parentName:\"p\"},\"@ngrx/entity\"),\"\\xA0.\"),mdx(\"h3\",null,\"Tile class\"),mdx(\"p\",null,\"Let\\u2019s first create a class named \",mdx(\"inlineCode\",{parentName:\"p\"},\"Tile\"),\" that represents the model of our state:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"Tile\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"public\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"readonly\"),\" id \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"uuid\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"constructor\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"public\"),\" assetId\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"?\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"Of course, unless a tile is preloaded with an asset ID, the asset ID won\\u2019t be defined until the user decides which asset to display, which is why we mark as possibly \",mdx(\"inlineCode\",{parentName:\"p\"},\"undefined\"),\".\"),mdx(\"h3\",null,\"Dashboard Adapter\"),mdx(\"p\",null,\"We move on and proceed to create the adapter for our state. Our state will simply be an entity state with a collection of tiles:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" dashboardAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" EntityAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"Tile\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"createEntityAdapter\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),`\n    Tile\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"h3\",null,\"Dashboard Actions\"),mdx(\"p\",null,\"In order to create our actions, we will be using the new factory provided by NGRX 8 called \",mdx(\"inlineCode\",{parentName:\"p\"},\"createAction\"),\"\\xA0.\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"enum\"),\" DashboardActionTypes \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    AddTile `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Dashboard] ADD_TILE'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    RemoveTile `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Dashboard] REMOVE_TILE'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    UpdateTile `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Dashboard] UPDATE_TILE'\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" addTile \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    DashboardActionTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"AddTile\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// action name\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"props\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" Tile \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// action payload type\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" removeTile \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    DashboardActionTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"RemoveTile\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"props\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin\"}),\"string\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" updateTile \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    DashboardActionTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"UpdateTile\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"props\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" Tile \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"To summarise the code, we have created 3 actions:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"addTile\"),\" whose payload is a \",mdx(\"inlineCode\",{parentName:\"li\"},\"Tile\"),\" class\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"removeTile\"),\" which only receives a string as payload, which is the ID\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"updateTile\"),\" which also receives a \",mdx(\"inlineCode\",{parentName:\"li\"},\"Tile\"),\" class\")),mdx(\"p\",null,\"Notice that \",mdx(\"inlineCode\",{parentName:\"p\"},\"props\"),\" is a function that gets imported from \",mdx(\"inlineCode\",{parentName:\"p\"},\"@ngrx/store\"),\" and gets called as a second argument.\"),mdx(\"h3\",null,\"Dashboard Reducer\"),mdx(\"p\",null,\"In order to build the dashboard reducer, we will use the new factory method called \",mdx(\"inlineCode\",{parentName:\"p\"},\"createReducer\"),\" that takes the following arguments:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"the first argument is the initial state, that we created using the entity adapter\"),mdx(\"li\",{parentName:\"ul\"},\"all the following arguments are the reducer functions for each action, that we define using the function \",mdx(\"inlineCode\",{parentName:\"li\"},\"on\"),\" also imported from \",mdx(\"inlineCode\",{parentName:\"li\"},\"@ngrx/store\"),\"\\xA0\"),mdx(\"li\",{parentName:\"ul\"},\"we use the entity adapter methods in order to add, remove and update the dashboard\\u2019s tiles\")),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// we create the state by adding an empty tile_\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" emptyTile \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"new\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"Tile\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"undefined\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" initialState \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" dashboardAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"addOne\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    emptyTile`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    dashboardAdapter`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"getInitialState\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" dashboardReducerFn \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createReducer\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    initialState`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"on\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"addTile\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" payload \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" dashboardAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"addOne\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"payload\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"on\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"removeTile\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" payload \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" dashboardAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"removeOne\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"payload\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"on\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"updateTile\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" payload \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" Tile \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" dashboardAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"updateOne\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n            `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" id\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" payload\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"id\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" changes\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" assetId\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" payload\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"assetId \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n            state\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"dashboardReducer\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    state `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" initialState\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    action`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),` Action\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" EntityState\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"Tile\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"dashboardReducerFn\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" action\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"We import the reducer in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"DashboardStoreModule\"),\"\\xA0:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"NgModule\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    imports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n         StoreModule`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"forFeature\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'dashboard'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" dashboardReducer\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// more\"),`\n`))),mdx(\"h2\",null,\"Assets Store\"),mdx(\"p\",null,\"As we are going to receive the list of assets using Coincap\\u2019s API, we\\u2019re just going to replicate their interface:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"interface\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"Asset\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    id`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    rank`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"symbol\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    name`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    supply`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    maxSupply`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"null\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    marketCapUsd`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    volumeUsd24Hr`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    priceUsd`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    changePercent24Hr`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    vwap24Hr`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"h3\",null,\"Assets Actions\"),mdx(\"p\",null,\"In order to fetch the assets, we will need to perform an HTTP request to Coincap\\u2019s API. The HTTP action will be going through the effect method we\\u2019re going to define in the next article.\\xA0\"),mdx(\"p\",null,\"What\\u2019s important to notice here is the way I\\u2019ve broken up the assets\\u2019 \",mdx(\"em\",{parentName:\"p\"},\"actions\"),\":\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"getAssetsRequestStarted:\"),`\naction that gets dispatched when the request starts`),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"getAssetsRequestSuccess:\"),`\naction that gets dispatched when the request succeeded (no error actions in this case for simplicity, but you should always create them)`),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"addAssets:\"),`\naction that will only be used by the reducer, which is a command to add assets to the store`)),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"enum\"),\" AssetsActionsTypes \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    GetAssetsRequestStarted `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Assets API] GET_ASSETS_REQUEST_STARTED'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    GetAssetsRequestSuccess `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Assets API] GET_ASSETS_REQUEST_SUCCESS'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    AddAssets `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Assets] ADD_ASSETS'\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" getAssetsRequestStarted \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    AssetsActionsTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"GetAssetsRequestStarted\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"props\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"]\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" getAssetsRequestSuccess \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    AssetsActionsTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"GetAssetsRequestSuccess\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"props\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" Asset\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"]\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" addAssets \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    AssetsActionsTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"AddAssets\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"props\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" Asset\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"]\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"h3\",null,\"Assets Reducer and\\xA0Adapter\"),mdx(\"p\",null,\"The only reducer function reacting to the \",mdx(\"em\",{parentName:\"p\"},\"addAssets\"),\" action will simply add all the assets to the store once they get fetched.\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// adapter\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" assetsAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" EntityAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"Asset\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"createEntityAdapter\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),\"Asset\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"selectId\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"asset\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" Asset\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" asset\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),`id\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// reducer\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" initialState \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" assetsAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"getInitialState\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" assetsReducerFn \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createReducer\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    initialState`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"on\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"addAssets\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" payload \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" assetsAdapter\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"addAll\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"payload\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"assetsReducer\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    state`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" EntityState\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"Asset\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"undefined\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    action`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),` Action\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"assetsReducerFn\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" action\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"h2\",null,\"Prices Store\"),mdx(\"p\",null,\"The prices returned by Coincap\\u2019s API are very simple and are just objects with the key of an asset and its relative price. As such, we have a very simple store for prices.\"),mdx(\"h3\",null,\"Prices Actions\"),mdx(\"p\",null,\"We will be creating 3 actions:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"addPrice\"),`:\naction for updating the store once a price is received`),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"createPriceSubscription\"),`:\naction for creating a subscription`),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"closePriceSubscription\"),`:\naction for closing a subscription`)),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"enum\"),\" PricesActionsTypes \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    AddPrice `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Prices Store] ADD_PRICE'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    CreatePriceSubscription `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Prices Stream] CREATE_PRICE_SUBSCRIPTION'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    ClosePriceSubscription `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Prices Stream] CLOSE_PRICE_SUBSCRIPTION'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    PriceReceived `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'[Prices Stream] PRICE_RECEIVED'\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" addPrice \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    PricesActionsTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"AddPrice\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"props\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" Price \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" createPriceSubscription \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    PricesActionsTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"CreatePriceSubscription\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"props\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin\"}),\"string\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" closePriceSubscription \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    PricesActionsTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),`ClosePriceSubscription\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" priceReceived \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createAction\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    PricesActionsTypes`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"PriceReceived\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"props\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\" payload\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" Price \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"h3\",null,\"Prices Reducer\"),mdx(\"p\",null,\"As the prices returned by Coincap\\u2019s real-time API are simply a key with the asset and its price, we really don\\u2019t need to do much with the entity framework.\"),mdx(\"p\",null,\"Indeed, for each price received, we simply set the key with the asset ID in our store and its price by spreading the price objects with the new payload.\"),mdx(\"p\",null,\"If it doesn\\u2019t exist, it gets created, otherwise, it gets overwritten with its newest value.\"),mdx(\"p\",null,\"Imagine our state is:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-unknown\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-unknown\"}),\"{ &quot;bitcoin&quot;: &quot;some price&quot; };\"))),mdx(\"p\",null,\"And our payload from the WebSocket\\u2019s stream is:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-unknown\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-unknown\"}),\"{ &quot;ethereum&quot;: &quot;another price&quot; }\"))),mdx(\"p\",null,\"This will simply become:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-unknown\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-unknown\"}),`{\n    &quot;bitcoin&quot;: &quot;some price&quot;,\n    &quot;ethereum&quot;: &quot;another price&quot;\n};`))),mdx(\"p\",null,\"And here is the code with one simple action:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" initialState\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" PriceState \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" pricesReducerFn \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createReducer\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    initialState`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"on\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"addPrice\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" payload \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"...\"),\"state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"...\"),\"payload \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"pricesReducer\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    state `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" initialState\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    action`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),` Action\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" PriceState \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"pricesReducerFn\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"state\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" action\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"h2\",null,\"An overview of the\\xA0Store\"),mdx(\"p\",null,\"Let\\u2019s take a look at the store with some data:\"),mdx(\"p\",null,mdx(\"img\",a({parentName:\"p\"},{src:\"https://cdn-images-1.medium.com/max/2400/1*3U_DkFj1rvw_cCxWyAph4g.png\",alt:null}))),mdx(\"p\",null,\"Type caption for image (optional)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"We have fetched 5 assets\"),mdx(\"li\",{parentName:\"ul\"},\"We have one, empty tile\"),mdx(\"li\",{parentName:\"ul\"},\"We have no prices, as the tile has not been subscribed to an asset\")),mdx(\"h2\",null,\"Takeaways\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Lay out your application entities and analyze how they relate between each other in order to have a clear understanding of what the store\\u2019s structure could look like\"),mdx(\"li\",{parentName:\"ul\"},\"Use NGRX Entity! It\\u2019s a great tool to reduce the boilerplate of your reducers\"),mdx(\"li\",{parentName:\"ul\"},\"Separate your UI modules from the store using Store Service Modules\"),mdx(\"li\",{parentName:\"ul\"},\"Prefer a flat structure over a nested one\"),mdx(\"li\",{parentName:\"ul\"},\"Keep actions clear and granular, distinguish between commands and events\")),mdx(\"hr\",null),mdx(\"p\",null,\"In the next article, we're going to build the effects that are responsible for fetching assets and prices from Coincap\\u2019s API.\"),mdx(\"p\",null,`Read it at the link below:\n`,mdx(\"a\",a({parentName:\"p\"},{href:\"https://medium.com/r/?url=https%3A%2F%2Fitnext.io%2Fbuilding-side-effects-in-ngrx-deb0d856096d\"}),\"Building Side Effects in NGRX\")),mdx(\"hr\",null),mdx(\"p\",null,\"Hope you enjoyed the article and send me a message if you agree, disagree, or would do anything differently!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"series":[{"live":true,"readingTime":"9 min read","title":"Introduction","date":"2019-05-02T00:00:00.322Z","slug":"state-management-with-ngrx-introduction","coverImage":"/assets/images/posts/stae-managemen-with-ngrx.png","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"An Introduction to the NGRX platform — Concepts, Best Practices, and Tips","series":"State Management with NgRx","tags":["ngrx","angular"]},{"live":true,"readingTime":"10 min read","title":"Architecting the Store","date":"2019-05-05T00:00:00.322Z","slug":"architecting-the-store-in-ngrx","coverImage":"/assets/images/posts/architecting-store-ngrx.png","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"A step-by-step guide to building and architecting the Store in NGRX","series":"State Management with NgRx","tags":["ngrx","angular"]},{"live":true,"readingTime":"6 min read","title":"Building Side Effects","date":"2019-06-05T00:00:00.322Z","slug":"building-side-effects-in-ngrx","coverImage":"/assets/images/posts/cryptofolio-cover.gif","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"Effects are one of the most powerful features in NGRX. Let’s see some practical examples, like calling an API or streaming real-time data","series":"State Management with NgRx","tags":["ngrx","angular"]},{"live":true,"readingTime":"10 min read","title":"Abstracting State with Facades","date":"2019-06-27T00:00:00.322Z","slug":"abstracting-state-with-ngrx-facades","coverImage":"/assets/images/posts/state-management-with-ngrx.png","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"Using Ngrx facades to connect your components with your state","series":"State Management with NgRx","tags":["angular","ngrx"]}],"morePosts":[],"moreArticles":[{"live":true,"readingTime":"2 min read","title":"Benchmarking Angular 12 with Webpack 5","date":"2021-05-14T00:00:00.322Z","slug":"webpack-5-angular12","coverImage":"/assets/images/posts/benchmarking-webpack-5.webp","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"Angular 12 has been released and with it the much awaited Webpack 5 upgrade. In this post I benchmarked the bundle-size and compilation speed against the previous version","tags":["angular"]},{"live":true,"readingTime":"5 min read","title":"Principles for creating libraries with Nx and Angular","date":"2021-02-07T00:00:00.322Z","slug":"how-to-organize-nx-modules-with-angular","coverImage":"/assets/images/posts/organize-nx-modules-ngrx.webp","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"Working with Nx may be confusing. This article explains how I create Nx libraries and the principles behind my motivations","tags":["nx","angular"]},{"live":true,"readingTime":"3 min read","title":"Where to put your Angular models?","date":"2020-08-03T00:00:00.322Z","slug":"angular-where-to-put-models","ogImage":{"url":"/assets/images/posts/where-put-angular-models.png"},"coverImage":"/assets/images/posts/where-put-angular-models.webp","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"Organizing entities and models in your Angular app may be hard. This article explains where to put your entities and what mistakes to watch out for","tags":["angular","architecture"]},{"live":true,"readingTime":"5 min read","title":"Using the Intersection Observer API with Angular","date":"2020-08-01T00:00:00.322Z","slug":"intersection-observer-with-angular","coverImage":"/assets/images/posts/intersection-observer.webp","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"This article shows how to build a directive with Angular that uses the Intersection Observer API to check when an element becomes visible on the page","tags":["angular","performance"]},{"live":true,"readingTime":"3 min read","title":"Setters vs ngOnChanges: which one is better?","date":"2020-07-30T00:00:00.322Z","slug":"setters-vs-ng-on-changes","coverImage":"/assets/images/posts/setters-vs-on-changes.webp","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"Listening to Input changes can be done in different ways. But which one should you use?","tags":["angular"]},{"live":true,"readingTime":"3 min read","title":"Async Rendering with a single Rx Operator","date":"2020-07-11T00:00:00.322Z","slug":"async-rendering-with-a-single-rx-operator","coverImage":"/assets/images/posts/async-rendering.webp","collection":{"name":"Angular","primaryColor":"#e23236","primaryColorLight":"#dd00316e","contrastColor":"#ffffff","logo":"/assets/images/collections/angular.webp"},"excerpt":"Increase your app rendering performance with this simple Rx operator","tags":["angular","rxjs"]}],"type":1},"__N_SSG":true}