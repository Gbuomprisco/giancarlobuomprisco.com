{"pageProps":{"post":{"live":true,"readingTime":"4 min read","title":"A conditional rendering Component for React","date":"2021-12-02T14:52:20.000Z","slug":"conditional-rendering-component-for-react","collection":{"name":"React","primaryColor":"#61DAFB","primaryColorLight":"#61dafb82","contrastColor":"#222","logo":"/assets/images/collections/react.webp","emoji":"","slug":"react"},"content":"\nJSX allows a lot of freedom for what you can do in your components: at the end of the day, _it's just Javascript_.\n\nIf you're like me and you've primarily worked with template-based frameworks (such as Vue or Angular), you may be used to directives or components that take care of the flow: conditions, for-loops, switch, etc.\n\nReact doesn't have these baked in (like SolidJS), but we can easily add it.\n\nThis blog post will show you the conditional rendering component, which you can use with React, but it is also easily applicable to any other JSX-based library.\n\nOne challenge I faced was making sure the result of the condition was correctly cast so that **we could safely use it with Typescript**.\n\n### Let's write the If component\n\nFirst, we define two type aliases with Typescript:\n\n* `Falsy` which represent values that are falsy in Javascript\n* `Condition` which is the value passed to the component\n\n```tsx\ntype Falsy = undefined | null | 0 | \"\";\ntype Condition<Value = unknown> = Value | Falsy;\n```\n\nWe're going to call the component `If`.\n\nIt accepts two properties:\n\n* `condition`: it's _any_ value. If it is truthy, then `children` will be displayed\n* `fallback`: it's optional and will be displayed if it's defined, and if it's the condition is `falsy`\n\nOf course, it also accepts a `children` property, which **we augment to take a function**.\n\nWhy? Because we want to pass the \"casted\" value to the children's tree.\n\nFor example, if I pass a component `Button` as a condition, I want to be able to use `Button` within the tree because it is not `falsy`.\n\nTo do so, `Button` will be passed down casted as a parameter of the function we define in the `children`.\n\n```tsx\ntype Props = React.PropsWithChildren<{\n  condition: Condition<Value>;\n  fallback?: ReactNode;\n  children: ReactNode | ((value: Value) => ReactNode);\n}>\n\nfunction If<Value = unknown>({\n  condition,\n  fallback,\n  children,\n}: Props) {\n   // body\n}\n```\n\nWe can now write the body:\n\n* if `condition` is truthy, we can render the `children`. If it's a function, then we call it and passed the result of the condition down as a parameter\n* if `condition` is falsy, and the `fallback` property is defined, we render `fallback`\n* otherwise, we return `null` so that nothing gets rendered\n\n```tsx\nreturn useMemo(() => {\n  if (condition) {\n    if (typeof children === \"function\") {\n      return <>{children(condition)}</>;\n    }\n\n    return <>{children}</>;\n  }\n\n  if (fallback) {\n    return <>{fallback}</>;\n  }\n\n  return null;\n}, [condition, fallback, children]);\n```\n\nAnd here is the complete snippet:\n\n```tsx\ntype Falsy = undefined | null | 0 | \"\";\ntype Condition<Value = unknown> = Value | Falsy;\n\nfunction If<Value = unknown>({\n  condition,\n  children,\n  fallback\n}: React.PropsWithChildren<{\n  condition: Condition<Value>;\n  children: ReactNode | ((value: Value) => ReactNode);\n  fallback?: ReactNode;\n}>) {\n  return useMemo(() => {\n    if (condition) {\n      if (typeof children === \"function\") {\n        return <>{children(condition)}</>;\n      }\n\n      return <>{children}</>;\n    }\n\n    if (fallback) {\n      return <>{fallback}</>;\n    }\n\n    return null;\n  }, [condition, fallback, children]);\n}\n```\n### Example\n\nLet's see a quick example that shows how to use the `If` component:\n\n```tsx\nfunction App() {\n  const [value, setValue] = useState<number>(0);\n\n  const onChange = (e: FormEvent<HTMLInputElement>) =>\n    setValue(Number(e.currentTarget.value));\n\n  const fallback = <span>Fallback content</span>;\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input value={value} type=\"number\" onChange={onChange} />\n      </div>\n\n      <If condition={value} fallback={fallback}>\n        Value: {value}\n      </If>\n    </div>\n  );\n}\n```\n\n<CodeSandboxSnippet src={`https://codesandbox.io/embed/condescending-tree-r0mki?fontsize=14&hidenavigation=1&theme=dark`} />\n\n### Conditionally rendering a component from the props\n\nAnother useful case I found is when I pass components as optional props, and conditionally **render the component if the consumer has passed it**.\n\nLet's assume we have a component that accepts another one.\n\nIn the ideal world, I could write the following:\n\n```tsx\nconst ReusableComponent: React.FC<{\n  heading?: React.FC;\n}> = ({  heading: Heading, children }) => {\n  return (\n    <div>\n      <If condition={Heading}>\n        <Heading />\n      </If>\n    </div>\n  );\n};\n```\n\nUnfortunately, I (or Typescript) am not smart enough to make the `children` tree understand that `Heading` was casted as truthy.\n\n`Heading` will error-out because the type-checking cannot understand that the `If` tree is only rendered when the condition value is truthy.\n\nSo we use a function to pass the casted value:\n\n```tsx\nconst ReusableComponent: React.FC<{\n  heading?: React.FC;\n}> = ({  heading, children }) => {\n  return (\n    <div>\n      <If condition={heading}>\n        {(Heading) => <Heading />}\n      </If>\n    </div>\n  );\n};\n```\n\nI am generally happy with the readability that this offers compared to ternaries, &&, or other weird ways that make Typescript happy.\n\nOf course, let me know if you have any questions or suggestions to improve this!\n","tags":["typescript","react"],"excerpt":"This post shows how to create a React component to render components conditionally.","ogImage":{"url":"/assets/images/posts/conditional-rendering-component-for-react.webp"}},"content":{"compiledSource":"var l=Object.defineProperty,i=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var t=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var m=(e,n,s)=>n in e?l(e,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[n]=s,a=(e,n)=>{for(var s in n||(n={}))o.call(n,s)&&m(e,s,n[s]);if(t)for(var s of t(n))c.call(n,s)&&m(e,s,n[s]);return e},N=(e,n)=>i(e,u(n));var r=(e,n)=>{var s={};for(var p in e)o.call(e,p)&&n.indexOf(p)<0&&(s[p]=e[p]);if(e!=null&&t)for(var p of t(e))n.indexOf(p)<0&&c.call(e,p)&&(s[p]=e[p]);return s};const makeShortcode=e=>function(s){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",a({},s))},CodeSandboxSnippet=makeShortcode(\"CodeSandboxSnippet\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var p=s,{components:e}=p,n=r(p,[\"components\"]);return mdx(MDXLayout,N(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"JSX allows a lot of freedom for what you can do in your components: at the end of the day, \",mdx(\"em\",{parentName:\"p\"},\"it's just Javascript\"),\".\"),mdx(\"p\",null,\"If you're like me and you've primarily worked with template-based frameworks (such as Vue or Angular), you may be used to directives or components that take care of the flow: conditions, for-loops, switch, etc.\"),mdx(\"p\",null,\"React doesn't have these baked in (like SolidJS), but we can easily add it.\"),mdx(\"p\",null,\"This blog post will show you the conditional rendering component, which you can use with React, but it is also easily applicable to any other JSX-based library.\"),mdx(\"p\",null,\"One challenge I faced was making sure the result of the condition was correctly cast so that \",mdx(\"strong\",{parentName:\"p\"},\"we could safely use it with Typescript\"),\".\"),mdx(\"h3\",null,\"Let's write the If component\"),mdx(\"p\",null,\"First, we define two type aliases with Typescript:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"Falsy\"),\" which represent values that are falsy in Javascript\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"Condition\"),\" which is the value passed to the component\")),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"type\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"Falsy\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"undefined\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"null\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"0\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"\"'),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"type\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"Condition\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),\"Value \",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin\"}),\"unknown\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\")),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Value\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Falsy\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"We're going to call the component \",mdx(\"inlineCode\",{parentName:\"p\"},\"If\"),\".\"),mdx(\"p\",null,\"It accepts two properties:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"condition\"),\": it's \",mdx(\"em\",{parentName:\"li\"},\"any\"),\" value. If it is truthy, then \",mdx(\"inlineCode\",{parentName:\"li\"},\"children\"),\" will be displayed\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"fallback\"),\": it's optional and will be displayed if it's defined, and if it's the condition is \",mdx(\"inlineCode\",{parentName:\"li\"},\"falsy\"))),mdx(\"p\",null,\"Of course, it also accepts a \",mdx(\"inlineCode\",{parentName:\"p\"},\"children\"),\" property, which \",mdx(\"strong\",{parentName:\"p\"},\"we augment to take a function\"),\".\"),mdx(\"p\",null,`Why? Because we want to pass the \"casted\" value to the children's tree.`),mdx(\"p\",null,\"For example, if I pass a component \",mdx(\"inlineCode\",{parentName:\"p\"},\"Button\"),\" as a condition, I want to be able to use \",mdx(\"inlineCode\",{parentName:\"p\"},\"Button\"),\" within the tree because it is not \",mdx(\"inlineCode\",{parentName:\"p\"},\"falsy\"),\".\"),mdx(\"p\",null,\"To do so, \",mdx(\"inlineCode\",{parentName:\"p\"},\"Button\"),\" will be passed down casted as a parameter of the function we define in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"children\"),\".\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"type\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"Props\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"React\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"PropsWithChildren\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  condition`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Condition\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Value\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  fallback`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"?\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ReactNode\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  children`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ReactNode\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),\"value\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"Value\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ReactNode\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"If\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Value\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"unknown\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  condition`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  fallback`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  children`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Props\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n   `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// body\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"We can now write the body:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"if \",mdx(\"inlineCode\",{parentName:\"li\"},\"condition\"),\" is truthy, we can render the \",mdx(\"inlineCode\",{parentName:\"li\"},\"children\"),\". If it's a function, then we call it and passed the result of the condition down as a parameter\"),mdx(\"li\",{parentName:\"ul\"},\"if \",mdx(\"inlineCode\",{parentName:\"li\"},\"condition\"),\" is falsy, and the \",mdx(\"inlineCode\",{parentName:\"li\"},\"fallback\"),\" property is defined, we render \",mdx(\"inlineCode\",{parentName:\"li\"},\"fallback\")),mdx(\"li\",{parentName:\"ul\"},\"otherwise, we return \",mdx(\"inlineCode\",{parentName:\"li\"},\"null\"),\" so that nothing gets rendered\")),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"useMemo\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"if\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"condition\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"if\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"typeof\"),\" children \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"===\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"function\"'),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"children\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"condition\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\"children\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"if\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"fallback\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\"fallback\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"null\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"condition\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" fallback\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" children\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"And here is the complete snippet:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"type\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"Falsy\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"undefined\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"null\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"0\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"\"'),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"type\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"Condition\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),\"Value \",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin\"}),\"unknown\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\")),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Value\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Falsy\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"If\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Value\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"unknown\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  condition`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  children`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  fallback\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"React\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"PropsWithChildren\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  condition`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Condition\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"Value\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  children`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ReactNode\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),\"value\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"Value\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ReactNode\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  fallback`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"?\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ReactNode\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"useMemo\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"if\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"condition\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"if\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"typeof\"),\" children \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"===\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"function\"'),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"children\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"condition\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\"children\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"if\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"fallback\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\"fallback\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"null\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"condition\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" fallback\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" children\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"h3\",null,\"Example\"),mdx(\"p\",null,\"Let's see a quick example that shows how to use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"If\"),\" component:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"App\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"value\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" setValue\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token generic-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"useState\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token generic class-name\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin\"}),\"number\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\"))),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"0\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"onChange\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),\"e\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"FormEvent\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"HTMLInputElement\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"setValue\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token known-class-name class-name\"}),\"Number\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"e\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),\"currentTarget\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token property-access\"}),\"value\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" fallback \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"span\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"Fallback content\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"span\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"div\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"className\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-value\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation attr-equals\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"'),\"App\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"')),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"div\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"        \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"input\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"value\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token script language-javascript\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token script-punctuation punctuation\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"value\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"type\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-value\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation attr-equals\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"'),\"number\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"')),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"onChange\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token script language-javascript\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token script-punctuation punctuation\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"onChange\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"/>\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"div\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token class-name\"}),\"If\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"condition\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token script language-javascript\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token script-punctuation punctuation\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"value\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"fallback\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token script language-javascript\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token script-punctuation punctuation\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"fallback\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"        Value: \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\"value\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token class-name\"}),\"If\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"    \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"div\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(CodeSandboxSnippet,{src:\"https://codesandbox.io/embed/condescending-tree-r0mki?fontsize=14&hidenavigation=1&theme=dark\",mdxType:\"CodeSandboxSnippet\"}),mdx(\"h3\",null,\"Conditionally rendering a component from the props\"),mdx(\"p\",null,\"Another useful case I found is when I pass components as optional props, and conditionally \",mdx(\"strong\",{parentName:\"p\"},\"render the component if the consumer has passed it\"),\".\"),mdx(\"p\",null,\"Let's assume we have a component that accepts another one.\"),mdx(\"p\",null,\"In the ideal world, I could write the following:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ReusableComponent\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"React\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"FC\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  heading`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"?\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"React\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"FC\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"  heading\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"Heading\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\",\"),\" children \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"div\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token class-name\"}),\"If\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"condition\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token script language-javascript\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token script-punctuation punctuation\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"Heading\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"        \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token class-name\"}),\"Heading\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"/>\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token class-name\"}),\"If\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"    \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"div\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"Unfortunately, I (or Typescript) am not smart enough to make the \",mdx(\"inlineCode\",{parentName:\"p\"},\"children\"),\" tree understand that \",mdx(\"inlineCode\",{parentName:\"p\"},\"Heading\"),\" was casted as truthy.\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Heading\"),\" will error-out because the type-checking cannot understand that the \",mdx(\"inlineCode\",{parentName:\"p\"},\"If\"),\" tree is only rendered when the condition value is truthy.\"),mdx(\"p\",null,\"So we use a function to pass the casted value:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-tsx\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"ReusableComponent\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"React\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"FC\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  heading`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"?\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token maybe-class-name\"}),\"React\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"FC\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"  heading\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\",\"),\" children \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"div\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token class-name\"}),\"If\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"condition\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token script language-javascript\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token script-punctuation punctuation\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"heading\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"        \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token parameter\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token maybe-class-name\"}),\"Heading\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token arrow operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token class-name\"}),\"Heading\")),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"/>\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"      \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token class-name\"}),\"If\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"})),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token plain-text\"}),\"    \"),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"div\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"I am generally happy with the readability that this offers compared to ternaries, &&, or other weird ways that make Typescript happy.\"),mdx(\"p\",null,\"Of course, let me know if you have any questions or suggestions to improve this!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"series":[],"morePosts":[],"moreArticles":[{"live":true,"readingTime":"5 min read","title":"A React Component to connect with MetaMask","date":"2021-12-20T00:00:00.322Z","slug":"connect-wallet-react-component","coverImage":"/assets/images/posts/react-metamask.webp","collection":{"name":"React","primaryColor":"#61DAFB","primaryColorLight":"#61dafb82","contrastColor":"#222","logo":"/assets/images/collections/react.webp","emoji":"","slug":"react"},"excerpt":"In this post, we are going to build a React button able to connect with a Metamask Wallet, and read the wallet's selected address.","tags":["react","next","web3"]}],"type":0},"__N_SSG":true}