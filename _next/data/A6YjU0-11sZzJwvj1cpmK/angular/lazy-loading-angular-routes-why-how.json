{"pageProps":{"post":{"live":true,"readingTime":"7 min read","title":"Lazy-Loading Auxiliary Routes with Angular â€” Why and How","date":"2020-05-07T00:00:00.322Z","slug":"lazy-loading-angular-routes-why-how","coverImage":"https://miro.medium.com/max/1400/1*7pMwQXna1YiDRRiIO5ofXA.jpeg","collection":"angular","excerpt":"Auxiliary Routes can be helpful for both technical and UX reasons: learn why and how to use them with Angular","content":"\nThis post was originally published, by myself, on the [Bit](https://blog.bitsrc.io) blog\n\nAuxiliary Routes are independent, secondary routes that can be added to a page along with a primary route. As an example, we can have a side-menu that lives within the primary route with its own `router-outlet`: thatâ€™s an auxiliary route.\n\n## Why are Auxiliary Routes useful?\n\nWhy would you want to add auxiliary routes to your application? Well â€” I would argue there are two good reasons for doing it: auxiliary routes are helpful for both technical and User Experience reasons:\n\n- In terms of UX, we use them for providing our users the ability to access or toggle portions of the page via the URL. That means you can link your applicationâ€™s users to deep parts of your application with a simple URL, without them having to click anywhere\n\n- In technical terms, we can also reduce the initial loading time by lazy loading the routes in the same way as we would do with normal full-page routes\n\nAuxiliary Routes can provide two non-trivial improvements to your application â€” and hereâ€™s even further good news: the Angular Router makes working with them a breeze. Letâ€™s learn how! ðŸš€\n\n## How do we create an Auxiliary Route?\n\nCreating an auxiliary route works in the same way as creating normal routes, with one difference: to create an auxiliary route, we need to assign a name to the `router-outlet ` element that will host its contents.\n\nThat means:\n- a router-outlet without a name will render the primary route matched by the URL\n- a router-outlet with a name assigned will match and host auxiliary routes\n\n## Authentication Popup as an Auxiliary Route\n\nOne of the most classic uses of auxiliary routes is creating popups that are also accessible via URL.\n\nFor example, I would argue that redirecting users directly to a login popup rather than prompting them to click a button makes for a much better UX. But at the same time, if the login was not requested â€” why load it?\n\nWhile there may be good reasons for doing it beforehand, which we will explore later on, in some cases you simply want to download **only the strictly required amount of code** your users need to be able to use your app.\n\n### Creating a new Library\n\nI assume you have already created an Angular project with the CLI.\n\nI am a huge fan of Angular libraries â€” and as such, I always recommend to create a separate library (be it within a monorepo or not) if you have a fair amount of code that you can share and reuse between multiple applications.\n\nSo â€” the first thing we do is to create a new library auth using the CLI:\n\n```\nng generate library auth\n```\n\n[The full source code of the application can be found on GitHub.](https://github.com/Gbuomprisco/ng-auxiliary-routes)\n\n### Creating the Sign In and Sign up Modules\n\nNext, we will be creating two modules: `sign-in` and `sign-up`.\n\nThe main module `AuthModule` created with the library will simply be used as a routing wapper to these two sub-modules. Of course, they will be lazy-loaded.\n\nAssume we have generated the two modules with the CLI: what we need to do is to provide the routing needed to load their route component:\n\n```typescript\n// sign in module\n\n@NgModule({\n  declarations: [SignInComponent],\n    imports: [\n        CommonModule,\n        SignInRoutingModule\n    ]\n})\nexport class SignInModule { }\n\n// sign in routing module\n@NgModule({\n    imports: [\n        RouterModule.forChild([{\n            path: '',\n            component: SignInComponent\n        }])\n    ],\n    exports: [RouterModule]\n})\nexport class SignInRoutingModule {}\n```\n\nThe process for `SignUpModule` is the same, so weâ€™ll skip it.\n\nBelow, we define the two routes and we lazy load them using `loadChildren`:\n\n```typescript\nconst routes: Route[] = [\n  {\n    component: AuthComponent,\n    path: '',\n    children: [\n      {\n        path: 'sign-in',\n        loadChildren: () => import('./sign-in/sign-in.module').then(m => m.SignInModule)\n      },\n      {\n        path: 'sign-up',\n        loadChildren: () => import('./sign-up/sign-up.module').then(m => m.SignUpModule)\n      },\n      {\n        path: '**',\n        redirectTo: 'sign-in'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n```\n\nAs we have mentioned, `AuthModule` and its component `AuthComponent` are simply wrappers around our two sub-routes.\n\nThis is what `AuthComponent` looks like:\n\n```typescript\n@Component({\n  selector: 'auth',\n  template: `\n    <router-outlet></router-outlet>\n  `\n})\nexport class AuthComponent {}\n```\n\nOur Libraryâ€™s routing is done! Certainly, our components are still empty, but we will get back to them later on.\n\n## Wiring app the application with the Auth library\n\nThe first thing we need to do is to create a new router-outlet in the App componentâ€™s template:\n\n```html\n// Primary Routing outlet\n<router-outlet></router-outlet>\n\n// Dialog Routing outlet\n<router-outlet name=\"dialog\"></router-outlet>\n```\n\nNow that we have created a secondary router outlet, we can define the routes that will be injected into it.\n\nLetâ€™s open the `app.routing.module` file and add a new route in which we will instantiate the new routing library:\n\n```typescript\nconst authRoute = {\n  path: 'auth',\n  outlet: 'dialog',\n  loadChildren: () => import('@auth').then(m => m.AuthModule)\n};\n\nconst routes: Routes = [\n  authRoute,\n  // other routes\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n```\n\nAs you can see above, thanks to the `loadChildren` function, we can lazy load the module `AuthModule` and the Angular routing will automatically import the bundled scripts for that module alone.\n\nItâ€™s important to notice that we have added the property outlet to the routing configuration, which refers to the name of the router outlet we defined in the template in the previous step.\n\n\n### Navigating to Auxiliary Routes\nNavigating to auxiliary routes is also possible is the directive routerLink. Check out below how to navigate to the routes we have just built:\n\n```html\n<button \n  [routerLink]=\"[{ outlets: { dialog: ['auth', 'sign-in'] } }]\"\n>\n  Sign In\n</button>\n\n<button \n  [routerLink]=\"[{ outlets: { dialog: ['auth', 'sign-up'] } }]\"\n>\n  Sign Up\n</button>\n```\n\n## Creating the Sign In and Sign Up Components\n\nItâ€™s now time to create the components for signing in and up into your application.\n\nWe will use Angular Materialâ€™s Dialog module to display the data as a dialog:\n\n```typescript\n@Component({\n  selector: 'sign-in',\n  template: `\n    <ng-template #dialog>\n      <div mat-dialog-title>\n        Sign In\n      </div>\n\n      <div mat-dialog-content>\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <input type=\"email\" placeholder=\"Email\" matInput />\n          </mat-form-field>\n        </div>\n\n        <div>\n          <mat-form-field appearance=\"outline\">\n            <input type=\"password\" placeholder=\"Password\" matInput />\n          </mat-form-field>\n        </div>\n      </div>\n\n      <div mat-dialog-actions>\n        <button mat-flat-button color=\"primary\">\n          Sign In\n        </button>\n      </div>\n    </ng-template>\n  `,\n  styleUrls: ['./sign-in.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SignInComponent implements AfterViewInit {\n  @ViewChild('dialog') template: TemplateRef<any>;\n\n  constructor(\n      private dialog: MatDialog\n  ) { }\n\n  ngAfterViewInit() {\n    this.dialog.open(this.template, { width: '350px' });\n  }\n}\n```\n\n### The dialog is closed, but the URL is still the same!\nThis is a common problem: if the dialog gets closed, the context of being in a certain route should also reset â€” but those are not actually connected in any way.\n\nThat means, we need to handle this situation manually: wee subscribe to the event when the dialog is closed, and then we navigate to the previous route\n\n```typescript\nngAfterViewInit() {\n  const ref = this.dialog.open(this.template, { width: '350px'});\n\n  ref.afterClosed().subscribe(() => {\n    this.router.navigate(['']);\n  });\n}\n```\n\nIt gets a little bit more complex when you do not know in which route you currently are: in that case, you can strip the auxiliary route from the current primary route and navigate there. \n\nThe code below should work in most situations:\n\n```typescript\nconst urlWithoutAuxiliaryRoute = this.router\n  .createUrlTree(['.'], { relativeTo: this.route })\n  .root.children[PRIMARY_OUTLET].toString();\n\nthis.router.navigate([urlWithoutAuxiliaryRoute]);\n```\n\n### Letâ€™s see it in action!\n\nHere is a preview of what weâ€™ve achieved: try to pay particular attention to the Network tab and see that the bundles are downloaded as I click on the button!\n\n![Demo](https://miro.medium.com/max/2000/1*_pbpk3nf1I8IJZjXyzzXxA.gif)\n\n## This is great. But can we do better?\nThe answer is yes! The Angular router allows strategies to preload certain modules. You can choose to pre-load all the modules OR, better, you can use `ngx-quicklink`.\n\nThis library will intelligently pre-load the routes that are currently visible in your page, and will only do so if the web page is idle and a link that points t the route is currently visible within the viewport. \n\nAs soon as the route becomes visible, the library will start fetching the bundles so that they will be readily available to execute.\n\nAdding NgxQuicklink is extremely easy:\n\n- First, we import the module\n- Then, we add the strategy to the main routing configuration\n\n```typescript\nRouterModule.forRoot(routes, {\n  preloadingStrategy: QuicklinkStrategy\n})\n```\n\nRemember to also add the module to the lazy-loaded routes!\n\n## Final Words\nAs you have seen, lazy loading auxiliary routes is a feature easily enabled by the Angular Router that allows us to ship much better applications both from a UX and a technical perspective.\n\nThe techniques described above can be applied to a multitude of use cases: think about all the popups in your applications that are not currently auxiliary route: how much more lightweight would your application be if they were all lazy-loaded as auxiliary routes? And how great would it be if you could create links to deeper parts of your application?\n\nIâ€™m sure you know the answers ðŸ˜‰\n\n[The source code can be found on GitHub](https://github.com/Gbuomprisco/ng-auxiliary-routes)\n\nIf you need any clarifications, or if you think something is unclear or wrong, do please leave a comment!\n\n","canonical":"https://blog.bitsrc.io/lazy-loading-auxiliary-routes-with-angular-why-and-how-9ceb2ddc6cae"},"content":{"compiledSource":"var N=Object.defineProperty,l=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var r=(e,n,t)=>n in e?N(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,a=(e,n)=>{for(var t in n||(n={}))o.call(n,t)&&r(e,t,n[t]);if(p)for(var t of p(n))c.call(n,t)&&r(e,t,n[t]);return e},m=(e,n)=>l(e,u(n));var i=(e,n)=>{var t={};for(var s in e)o.call(e,s)&&n.indexOf(s)<0&&(t[s]=e[s]);if(e!=null&&p)for(var s of p(e))n.indexOf(s)<0&&c.call(e,s)&&(t[s]=e[s]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var s=t,{components:e}=s,n=i(s,[\"components\"]);return mdx(MDXLayout,m(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"This post was originally published, by myself, on the \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://blog.bitsrc.io\"}),\"Bit\"),\" blog\"),mdx(\"p\",null,\"Auxiliary Routes are independent, secondary routes that can be added to a page along with a primary route. As an example, we can have a side-menu that lives within the primary route with its own \",mdx(\"inlineCode\",{parentName:\"p\"},\"router-outlet\"),\": that\\u2019s an auxiliary route.\"),mdx(\"h2\",null,\"Why are Auxiliary Routes useful?\"),mdx(\"p\",null,\"Why would you want to add auxiliary routes to your application? Well \\u2014 I would argue there are two good reasons for doing it: auxiliary routes are helpful for both technical and User Experience reasons:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"In terms of UX, we use them for providing our users the ability to access or toggle portions of the page via the URL. That means you can link your application\\u2019s users to deep parts of your application with a simple URL, without them having to click anywhere\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},\"In technical terms, we can also reduce the initial loading time by lazy loading the routes in the same way as we would do with normal full-page routes\"))),mdx(\"p\",null,\"Auxiliary Routes can provide two non-trivial improvements to your application \\u2014 and here\\u2019s even further good news: the Angular Router makes working with them a breeze. Let\\u2019s learn how! \\u{1F680}\"),mdx(\"h2\",null,\"How do we create an Auxiliary Route?\"),mdx(\"p\",null,\"Creating an auxiliary route works in the same way as creating normal routes, with one difference: to create an auxiliary route, we need to assign a name to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"router-outlet \"),\" element that will host its contents.\"),mdx(\"p\",null,\"That means:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"a router-outlet without a name will render the primary route matched by the URL\"),mdx(\"li\",{parentName:\"ul\"},\"a router-outlet with a name assigned will match and host auxiliary routes\")),mdx(\"h2\",null,\"Authentication Popup as an Auxiliary Route\"),mdx(\"p\",null,\"One of the most classic uses of auxiliary routes is creating popups that are also accessible via URL.\"),mdx(\"p\",null,\"For example, I would argue that redirecting users directly to a login popup rather than prompting them to click a button makes for a much better UX. But at the same time, if the login was not requested \\u2014 why load it?\"),mdx(\"p\",null,\"While there may be good reasons for doing it beforehand, which we will explore later on, in some cases you simply want to download \",mdx(\"strong\",{parentName:\"p\"},\"only the strictly required amount of code\"),\" your users need to be able to use your app.\"),mdx(\"h3\",null,\"Creating a new Library\"),mdx(\"p\",null,\"I assume you have already created an Angular project with the CLI.\"),mdx(\"p\",null,\"I am a huge fan of Angular libraries \\u2014 and as such, I always recommend to create a separate library (be it within a monorepo or not) if you have a fair amount of code that you can share and reuse between multiple applications.\"),mdx(\"p\",null,\"So \\u2014 the first thing we do is to create a new library auth using the CLI:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-unknown\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-unknown\"}),\"ng generate library auth\"))),mdx(\"p\",null,mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/Gbuomprisco/ng-auxiliary-routes\"}),\"The full source code of the application can be found on GitHub.\")),mdx(\"h3\",null,\"Creating the Sign In and Sign up Modules\"),mdx(\"p\",null,\"Next, we will be creating two modules: \",mdx(\"inlineCode\",{parentName:\"p\"},\"sign-in\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"sign-up\"),\".\"),mdx(\"p\",null,\"The main module \",mdx(\"inlineCode\",{parentName:\"p\"},\"AuthModule\"),\" created with the library will simply be used as a routing wapper to these two sub-modules. Of course, they will be lazy-loaded.\"),mdx(\"p\",null,\"Assume we have generated the two modules with the CLI: what we need to do is to provide the routing needed to load their route component:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// sign in module\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"NgModule\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  declarations`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"SignInComponent\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    imports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n        CommonModule`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n        SignInRoutingModule\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"SignInModule\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// sign in routing module\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"NgModule\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    imports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n        RouterModule`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"forChild\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n            path`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"''\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n            component`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),` SignInComponent\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    exports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"RouterModule\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"SignInRoutingModule\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"The process for \",mdx(\"inlineCode\",{parentName:\"p\"},\"SignUpModule\"),\" is the same, so we\\u2019ll skip it.\"),mdx(\"p\",null,\"Below, we define the two routes and we lazy load them using \",mdx(\"inlineCode\",{parentName:\"p\"},\"loadChildren\"),\":\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" routes\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" Route\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    component`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" AuthComponent\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    path`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"''\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    children`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        path`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'sign-in'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"loadChildren\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"import\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'./sign-in/sign-in.module'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"then\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"m \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" m\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"SignInModule\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        path`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'sign-up'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"loadChildren\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"import\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'./sign-up/sign-up.module'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"then\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"m \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" m\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"SignUpModule\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        path`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'**'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n        redirectTo`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'sign-in'\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"NgModule\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  imports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n    RouterModule`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"forChild\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"routes\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  exports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"RouterModule\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"AuthRoutingModule\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"As we have mentioned, \",mdx(\"inlineCode\",{parentName:\"p\"},\"AuthModule\"),\" and its component \",mdx(\"inlineCode\",{parentName:\"p\"},\"AuthComponent\"),\" are simply wrappers around our two sub-routes.\"),mdx(\"p\",null,\"This is what \",mdx(\"inlineCode\",{parentName:\"p\"},\"AuthComponent\"),\" looks like:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"Component\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  selector`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'auth'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  template`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token template-string\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token template-punctuation string\"}),\"`\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"})),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"    <router-outlet></router-outlet>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"  \"),mdx(\"span\",a({parentName:\"span\"},{className:\"token template-punctuation string\"}),\"`\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"AuthComponent\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"Our Library\\u2019s routing is done! Certainly, our components are still empty, but we will get back to them later on.\"),mdx(\"h2\",null,\"Wiring app the application with the Auth library\"),mdx(\"p\",null,\"The first thing we need to do is to create a new router-outlet in the App component\\u2019s template:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-html\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-html\"}),`// Primary Routing outlet\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"router-outlet\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"router-outlet\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n\n// Dialog Routing outlet\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"router-outlet\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"name\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-value\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation attr-equals\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"'),\"dialog\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"')),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"router-outlet\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n`))),mdx(\"p\",null,\"Now that we have created a secondary router outlet, we can define the routes that will be injected into it.\"),mdx(\"p\",null,\"Let\\u2019s open the \",mdx(\"inlineCode\",{parentName:\"p\"},\"app.routing.module\"),\" file and add a new route in which we will instantiate the new routing library:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" authRoute \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  path`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'auth'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  outlet`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'dialog'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"loadChildren\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"import\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'@auth'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"then\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"m \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" m\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"AuthModule\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" routes\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" Routes \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n  authRoute`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// other routes\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"NgModule\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  imports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"RouterModule\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"forRoot\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"routes\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  exports`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"RouterModule\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"AppRoutingModule\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"As you can see above, thanks to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"loadChildren\"),\" function, we can lazy load the module \",mdx(\"inlineCode\",{parentName:\"p\"},\"AuthModule\"),\" and the Angular routing will automatically import the bundled scripts for that module alone.\"),mdx(\"p\",null,\"It\\u2019s important to notice that we have added the property outlet to the routing configuration, which refers to the name of the router outlet we defined in the template in the previous step.\"),mdx(\"h3\",null,\"Navigating to Auxiliary Routes\"),mdx(\"p\",null,\"Navigating to auxiliary routes is also possible is the directive routerLink. Check out below how to navigate to the routes we have just built:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-html\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-html\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"button\"),` \n  `,mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"[routerLink]\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-value\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation attr-equals\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"'),\"[{ outlets: { dialog: [\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"'\"),\"auth\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"'\"),\", \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"'\"),\"sign-in\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"'\"),\"] } }]\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"')),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n  Sign In\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"button\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"button\"),` \n  `,mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"[routerLink]\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-value\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation attr-equals\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"'),\"[{ outlets: { dialog: [\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"'\"),\"auth\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"'\"),\", \",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"'\"),\"sign-up\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"'\"),\"] } }]\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"')),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n  Sign Up\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"button\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n`))),mdx(\"h2\",null,\"Creating the Sign In and Sign Up Components\"),mdx(\"p\",null,\"It\\u2019s now time to create the components for signing in and up into your application.\"),mdx(\"p\",null,\"We will use Angular Material\\u2019s Dialog module to display the data as a dialog:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"Component\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  selector`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'sign-in'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  template`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token template-string\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token template-punctuation string\"}),\"`\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"})),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"    <ng-template #dialog>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"      <div mat-dialog-title>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"        Sign In\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"      </div>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"})),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"      <div mat-dialog-content>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"        <div>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),'          <mat-form-field appearance=\"outline\">'),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),'            <input type=\"email\" placeholder=\"Email\" matInput />'),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"          </mat-form-field>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"        </div>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"})),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"        <div>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),'          <mat-form-field appearance=\"outline\">'),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),'            <input type=\"password\" placeholder=\"Password\" matInput />'),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"          </mat-form-field>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"        </div>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"      </div>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"})),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"      <div mat-dialog-actions>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),'        <button mat-flat-button color=\"primary\">'),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"          Sign In\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"        </button>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"      </div>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"    </ng-template>\"),`\n`,mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"  \"),mdx(\"span\",a({parentName:\"span\"},{className:\"token template-punctuation string\"}),\"`\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  styleUrls`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'./sign-in.component.css'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n  changeDetection`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" ChangeDetectionStrategy\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),`OnPush\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"SignInComponent\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"implements\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"AfterViewInit\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token decorator\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token at operator\"}),\"@\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"ViewChild\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'dialog'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" template\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" TemplateRef\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"any\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"constructor\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n      `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"private\"),\" dialog\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),` MatDialog\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"ngAfterViewInit\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"this\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"dialog\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"open\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"this\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"template\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" width\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'350px'\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"h3\",null,\"The dialog is closed, but the URL is still the same!\"),mdx(\"p\",null,\"This is a common problem: if the dialog gets closed, the context of being in a certain route should also reset \\u2014 but those are not actually connected in any way.\"),mdx(\"p\",null,\"That means, we need to handle this situation manually: wee subscribe to the event when the dialog is closed, and then we navigate to the previous route\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"ngAfterViewInit\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" ref \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"this\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"dialog\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"open\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"this\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"template\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" width\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'350px'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n  ref`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"afterClosed\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"subscribe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"this\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"router\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"navigate\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"''\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"It gets a little bit more complex when you do not know in which route you currently are: in that case, you can strip the auxiliary route from the current primary route and navigate there. \"),mdx(\"p\",null,\"The code below should work in most situations:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" urlWithoutAuxiliaryRoute \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"this\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),`router\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"createUrlTree\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'.'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),\" relativeTo\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"this\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"route \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n  `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"root\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"children\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"PRIMARY_OUTLET\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"toString\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"this\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"router\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"navigate\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"urlWithoutAuxiliaryRoute\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"h3\",null,\"Let\\u2019s see it in action!\"),mdx(\"p\",null,\"Here is a preview of what we\\u2019ve achieved: try to pay particular attention to the Network tab and see that the bundles are downloaded as I click on the button!\"),mdx(\"p\",null,mdx(\"img\",a({parentName:\"p\"},{src:\"https://miro.medium.com/max/2000/1*_pbpk3nf1I8IJZjXyzzXxA.gif\",alt:\"Demo\"}))),mdx(\"h2\",null,\"This is great. But can we do better?\"),mdx(\"p\",null,\"The answer is yes! The Angular router allows strategies to preload certain modules. You can choose to pre-load all the modules OR, better, you can use \",mdx(\"inlineCode\",{parentName:\"p\"},\"ngx-quicklink\"),\".\"),mdx(\"p\",null,\"This library will intelligently pre-load the routes that are currently visible in your page, and will only do so if the web page is idle and a link that points t the route is currently visible within the viewport. \"),mdx(\"p\",null,\"As soon as the route becomes visible, the library will start fetching the bundles so that they will be readily available to execute.\"),mdx(\"p\",null,\"Adding NgxQuicklink is extremely easy:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"First, we import the module\"),mdx(\"li\",{parentName:\"ul\"},\"Then, we add the strategy to the main routing configuration\")),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),\"RouterModule\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"forRoot\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"routes\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n  preloadingStrategy`,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),` QuicklinkStrategy\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`))),mdx(\"p\",null,\"Remember to also add the module to the lazy-loaded routes!\"),mdx(\"h2\",null,\"Final Words\"),mdx(\"p\",null,\"As you have seen, lazy loading auxiliary routes is a feature easily enabled by the Angular Router that allows us to ship much better applications both from a UX and a technical perspective.\"),mdx(\"p\",null,\"The techniques described above can be applied to a multitude of use cases: think about all the popups in your applications that are not currently auxiliary route: how much more lightweight would your application be if they were all lazy-loaded as auxiliary routes? And how great would it be if you could create links to deeper parts of your application?\"),mdx(\"p\",null,\"I\\u2019m sure you know the answers \\u{1F609}\"),mdx(\"p\",null,mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/Gbuomprisco/ng-auxiliary-routes\"}),\"The source code can be found on GitHub\")),mdx(\"p\",null,\"If you need any clarifications, or if you think something is unclear or wrong, do please leave a comment!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"series":[],"morePosts":[],"moreArticles":[{"live":true,"readingTime":"2 min read","title":"Benchmarking Angular 12 with Webpack 5","date":"2021-05-14T00:00:00.322Z","slug":"webpack-5-angular12","coverImage":"/assets/images/posts/benchmarking-webpack-5.webp","collection":"angular","excerpt":"Angular 12 has been released and with it the much awaited Webpack 5 upgrade. In this post I benchmarked the bundle-size and compilation speed against the previous version","tags":["angular"]},{"live":true,"readingTime":"5 min read","title":"Principles for creating libraries with Nx and Angular","date":"2021-02-07T00:00:00.322Z","slug":"how-to-organize-nx-modules-with-angular","coverImage":"/assets/images/posts/organize-nx-modules-ngrx.webp","collection":"angular","excerpt":"Working with Nx may be confusing. This article explains how I create Nx libraries and the principles behind my motivations","tags":["nx","angular"]},{"live":true,"readingTime":"3 min read","title":"Where to put your Angular models?","date":"2020-08-03T00:00:00.322Z","slug":"angular-where-to-put-models","ogImage":{"url":"/assets/images/posts/where-put-angular-models.png"},"coverImage":"/assets/images/posts/where-put-angular-models.webp","collection":"angular","excerpt":"Organizing entities and models in your Angular app may be hard. This article explains where to put your entities and what mistakes to watch out for","tags":["angular","architecture"]},{"live":true,"readingTime":"5 min read","title":"Using the Intersection Observer API with Angular","date":"2020-08-01T00:00:00.322Z","slug":"intersection-observer-with-angular","coverImage":"/assets/images/posts/intersection-observer.webp","collection":"angular","excerpt":"This article shows how to build a directive with Angular that uses the Intersection Observer API to check when an element becomes visible on the page","tags":["angular","performance"]},{"live":true,"readingTime":"3 min read","title":"Setters vs ngOnChanges: which one is better?","date":"2020-07-30T00:00:00.322Z","slug":"setters-vs-ng-on-changes","coverImage":"/assets/images/posts/setters-vs-on-changes.webp","collection":"angular","excerpt":"Listening to Input changes can be done in different ways. But which one should you use?","tags":["angular"]},{"live":true,"readingTime":"3 min read","title":"Async Rendering with a single Rx Operator","date":"2020-07-11T00:00:00.322Z","slug":"async-rendering-with-a-single-rx-operator","coverImage":"/assets/images/posts/async-rendering.webp","collection":"angular","excerpt":"Increase your app rendering performance with this simple Rx operator","tags":["angular","rxjs"]}],"type":1},"__N_SSG":true}