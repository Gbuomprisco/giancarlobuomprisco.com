{"pageProps":{"post":{"readingTime":"2 min read","title":"Build Typescript libraries for the browser with Nx","date":"2020-07-25T00:00:00.322Z","slug":"build-typescript-libraries-for-the-browser-with-nx","content":"<p>I have quite a few libraries in my Nx workspaces, and most of them are built using their tooling (Angular, Stencil).</p>\n<p>Also, I have a few vanilla Typescript libraries that need to be consumed within a Browser environment. Originally, I used to bundle them with the builder <code>@nrwl/web:bundle</code> - which got deprecated with Nx 9.</p>\n<p>I needed to find another way.</p>\n<p>The best way I found to achieve an even better result is by using the builder <code>@nrwl/node:build</code>, extended with a Webpack configuration.</p>\n<h2>Configuration</h2>\n<p>Here's the configuration that I use to build browser-compatible distributions of my library <code>sdk</code>:</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"sdk\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"root\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"libs/sdk\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sourceRoot\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"libs/sdk/src\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"projectType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"library\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"schematics\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"architect\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"builder\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@nrwl/node:build\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"outputPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/sdk\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"libs/sdk/src/index.ts\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"tsConfig\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"libs/sdk/tsconfig.lib.json\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"project\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"libs/sdk/package.json\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"webpackConfig\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"libs/sdk/webpack.config.js\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"production\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"fileReplacements\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n              <span class=\"token property\">\"replace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"libs/sdk/src/environments/environment.ts\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token property\">\"with\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"libs/sdk/src/environments/environment.prod.ts\"</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<h3>Webpack configuration</h3>\n<p>As you may have noticed, I have also supplied a Webpack configuration file. It's needed, as we want to tell Webpack to produce a browser bundle.</p>\n<p>Also, we can extend the configuration with any plugin we want. For example, I used Terser to optimize the size of the output.</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">TerserPlugin</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'terser-webpack-plugin'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token spread operator\">...</span>config<span class=\"token punctuation\">,</span>\n    externals<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    target<span class=\"token operator\">:</span> <span class=\"token string\">\"web\"</span><span class=\"token punctuation\">,</span>\n    plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token spread operator\">...</span>config<span class=\"token punctuation\">.</span><span class=\"token property-access\">plugins</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">TerserPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        parallel<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        terserOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          ecma<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    devtool<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token spread operator\">...</span>config<span class=\"token punctuation\">.</span><span class=\"token property-access\">output</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'sdk.umd.js'</span><span class=\"token punctuation\">,</span>\n      libraryTarget<span class=\"token operator\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3>Bundling the Typescript library</h3>\n<p>In order to bundle the library, I run the following command:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">&#x26;gt; ng run sdk:build\nStarting type checking service...\nUsing 10 workers with 2048MB memory limit\nHash: c02b92c803ac182c3da8\nBuilt at: 07/26/2020 1:00:34 AM\nEntrypoint main = sdk.umd.js\nchunk    {0} sdk.umd.js (main) 35.3 KiB [entry] [rendered]\n\n———————————————————————————————————————————————\n\n&#x26;gt;  NX   SUCCESS  Running target &#x26;quot;build&#x26;quot; succeeded</code></pre></div>\n<hr>\n<p><em>If you enjoyed this article, follow me on <a href=\"https://twitter.com/gc_psk\">Twitter</a></em></p>\n","coverImage":"/assets/images/posts/typescript-libraries-with-nx.png","collection":"typescript"},"morePosts":[{"readingTime":"2 min read","title":"Better code with Typescript aliases","date":"2020-07-26T00:00:00.322Z","slug":"better-code-with-typescript-aliases","coverImage":"/assets/images/posts/typescript-aliases.png","collection":"typescript"},{"readingTime":"5 min read","title":"Enforce your team coding style with Prettier and TsLint","date":"2019-04-17T00:00:00.322Z","slug":"enforce-your-team-style-with-prettier-and-tslint","coverImage":"https://miro.medium.com/max/1400/1*DisWkrhZ8V6Hhi522eOu0g.gif","collection":"typescript","excerpt":"Using TsLint to enforce your team coding style"},{"readingTime":"10 min read","title":"Writing scalable Typescript","date":"2019-04-05T00:00:00.322Z","slug":"writing-scalabale-typescript","ogImage":{"url":"https://cdn-images-1.medium.com/max/1600/1*xxzCZ_x7oeKlq_NRTw6GeA.jpeg"},"coverImage":"https://cdn-images-1.medium.com/max/1600/1*xxzCZ_x7oeKlq_NRTw6GeA.jpeg","collection":"typescript","excerpt":"Let’s explore in detail how to write clean, safe, enterprise-grade Typescript code"}]},"__N_SSG":true}