{"pageProps":{"post":{"live":true,"readingTime":"5 min read","title":"A simple Countdown with RxJS","date":"2019-06-05T00:00:00.322Z","slug":"a-simple-countdown-with-rx-js","coverImage":"/assets/images/posts/rxjs-countdown.gif","collection":{"name":"RxJs","primaryColor":"#d81b60","primaryColorLight":"#d81b6085","contrastColor":"#fff","logo":"/assets/images/collections/rxjs.webp","slug":"rxjs"},"excerpt":"In this tutorial, we’re going to build a very simple timer application with only a few lines of code using RxJS","content":"\n#### In this tutorial, we’re going to build a very simple timer application with only a few lines of code using RxJS.\n\n### Preview\n\nBefore we get started, you can view the result using the awesome Stackblitz. You can see a preview of the final result at [this link](https://medium.com/r/?url=https%3A%2F%2Frxjs-rajp6s.stackblitz.io).\n\nThe timer starts automatically when you land on the page, you can click on the time to stop it, and click again to restart the timer. \n\nWhen the time ends, the user will be prompted to take a break! It’s a very simple example, so the timer won’t restart.\n\n### Constants\n\nLet’s first define some of the constants we’re going to use:\n\n*   We define `K` as we’re going to use this a lot, as we will be dealing with milliseconds, so we assign `1000` as value\n*   The interval is the amount of time that needs to elapse in order to update the timer. If we set it to `5000`, the timer would be updated every 5 seconds\n*   We set the minutes we want our timer to be long and its time in milliseconds\n\n```typescript\nconst K = 1000;\nconst INTERVAL = K;\nconst MINUTES = 25;\nconst TIME = MINUTES * K * 60;\n````\n\n### State variables\n\nIn order to keep the time’s state when pausing/resuming the timer, we define two variables:\n\n```typescript\nlet current: number;\nlet time = TIME;\n```\n\n*   `current` will be continually updated every second\n*   `time` will be updated when the timer stops\n\n### Helper functions\n\nWe define some helper functions used by our streams. We want to:\n\n*   convert remaining time to milliseconds and seconds\n*   have functions to display remaining minutes and seconds\n\n```typescript\nconst toMinutes = (ms: number) =>\n    Math.floor(ms / K / 60);\n\nconst toSeconds = (ms: number) =>\n    Math.floor(ms / K) % 60;\n\nconst toSecondsString = (ms: number) => {\n    const seconds = toSeconds(ms);\n    return seconds < 10 ? `0${seconds}` : seconds.toString();\n}\n\nconst toMs = (t: number) => t * INTERVAL;\n\nconst currentInterval = () => time / INTERVAL;\n\nconst toRemainingSeconds = (t: number) => currentInterval() - t;\n```\n\n### Defining the Rx streams\n\nFirst, we define the `timer$` stream: \n\n*   we use the observable creator `timer`, that emits every `INTERVAL` times, which basically means it will emit every second\n\nThe stream will convert the milliseconds emitted from `timer` to the remaining seconds.\n\n```typescript\nconst toggle$ = new BehaviorSubject(true);\nconst remainingSeconds$ = toggle$.pipe(\n    switchMap((running: boolean) => {\n        return running ? timer(0, INTERVAL) : NEVER;\n    }),\n    map(toRemainingSeconds),\n    takeWhile(t => t >= 0)\n);\n```\n\nLet’s explain detail what this does:\n\n```\n**toggle$** -> true...false...true\n\n-----\n\n**switchMap** to:\n\n **if toggle is true -> timer(0, INTERVAL = 1000)** -> 0...1000...2000\n **if toggle is false ? ->** NEVER = do not continue\n\n----\n\n**map(toRemainingSeconds)** -> ms elapsed mapped to remaining seconds (ex. 1500)\n\n----\n\n**takeWhile(remainingSeconds)** -> complete once **remainingSeconds$'s** value  is no more >= 0\n```\n\nLet’s consider the operators used:\n\n*   the mapper `toSeconds` will convert the milliseconds returned by the observable to the number of seconds that are remaining\n*   by using the operator `takeWhile` we’re basically telling the `remainingSeconds$` observable to keep going until the seconds remaining are greater or equal than 0\n*   After that, `remainingSeconds$` will emit its completion callback that we can use to replace the timer with some other content\n\nBefore creating the relative minutes and seconds we will be displaying, we want to be able to stop and resume and timer. \n\nIf `toggle$` is emitted with `true` as value, the timer keeps running, while if it gets emitted with `false` it will stop, as instead of mapping to `remainingSeconds$` it will emit the observable `NEVER` .\n\n### Pausing and resuming the timer\n\nBy using `fromEvent` , we can listen to click events and update the behavior subject by toggling its current value.\n\n```typescript\nconst toggleElement = document.querySelector('.timer');\n\nfromEvent(toggleElement, ‘click’).subscribe(() => {\n    toggle$.next(!toggle$.value);\n});\n```\n\nBut `toggle$` also does something else: \n\n*   every time the timer gets stopped, we want to update the time variable with the current time, so that the next time the timer restarts, it will restart from the current time.\n\n```typescript\ntoggle$.pipe(\n    filter((toggled: boolean) => !toggled)\n).subscribe(() => {\n    time = current;\n});\n```\n\nNow, we can define the milliseconds observable we’re going to use to display minutes and seconds: \n\n```typescript\nconst ms$ = time$.pipe(\n    map(toMs),\n    tap(t => current = t)\n);\n```\n\nEvery time `ms$` emits, we use the `tap` operator to update the stateful variable `current`.\n\nNext, we’re going to define minutes and seconds by reusing the helper methods we defined earlier in the article.\n\n```typescript\nconst minutes$ = ms$.pipe(\n    map(toMinutesDisplay),\n    map(s => s.toString()),\n    startWith(toMinutesDisplay(time).toString())\n);\n\nconst seconds$ = ms$.pipe(\n    map(toSecondsDisplayString),\n    startWith(toSecondsDisplayString(time).toString())\n);\n```\n\nAnd that’s it! Our streams are ready and can now update the DOM.\n\n### Updating the DOM\n\nWe define a simple function called `updateDom` that takes an observable as the first argument and an HTML element as the second one. Every time the source emits, it will update the `innerHTML` of the node.\n\nHTML:\n\n```html\n<div class=\"timer\">\n    <span class=\"minutes\"></span>\n    <span>:</span>\n    <span class=\"seconds\"></span>\n</div>\n```\n\n```typescript\n// DOM nodes\nconst minutesElement = document.querySelector('.minutes');\nconst secondsElement = document.querySelector('.seconds');\n\nupdateDom(minutes$, minutesElement);\nupdateDom(seconds$, secondsElement);\n\nfunction updateDom(source$: Observable<string>, element: Element) {\n    source$.subscribe((value) => element.innerHTML = value);\n}\n```\n\nLastly, we want to display a message when the timer stops:\n\n```typescript\ntimer$.subscribe({\n    complete: () => updateDom(of('Take a break!'), toggleElement)\n});\n```\n\n![](https://cdn-images-1.medium.com/max/1600/1*viwakc1HIU6SKXtrXgTLPw.gif)\n\nYou can find the complete code snippet on [Stackblitz](https://medium.com/r/?url=https%3A%2F%2Fstackblitz.com%2Fedit%2Frxjs-rajp6s%3Ffile%3Dindex.ts).\n\nHope you enjoyed the article and leave a message if you agree, disagree, or if you would do anything differently!\n\n* * *\n\n_If you enjoyed this article, follow me on_ [_Medium_](https://medium.com/@.gc) _or_ [_Twitter_](https://medium.com/r/?url=https%3A%2F%2Ftwitter.com%2Fhome) _for more articles about Angular, RxJS, Typescript and more!_\n","tags":["rxjs"]},"content":{"compiledSource":"var i=Object.defineProperty,l=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var m=(e,n,s)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[n]=s,a=(e,n)=>{for(var s in n||(n={}))o.call(n,s)&&m(e,s,n[s]);if(p)for(var s of p(n))c.call(n,s)&&m(e,s,n[s]);return e},r=(e,n)=>l(e,u(n));var N=(e,n)=>{var s={};for(var t in e)o.call(e,t)&&n.indexOf(t)<0&&(s[t]=e[t]);if(e!=null&&p)for(var t of p(e))n.indexOf(t)<0&&c.call(e,t)&&(s[t]=e[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:e}=t,n=N(t,[\"components\"]);return mdx(MDXLayout,r(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h4\",null,\"In this tutorial, we\\u2019re going to build a very simple timer application with only a few lines of code using\\xA0RxJS.\"),mdx(\"h3\",null,\"Preview\"),mdx(\"p\",null,\"Before we get started, you can view the result using the awesome Stackblitz. You can see a preview of the final result at \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://medium.com/r/?url=https%3A%2F%2Frxjs-rajp6s.stackblitz.io\"}),\"this link\"),\".\"),mdx(\"p\",null,\"The timer starts automatically when you land on the page, you can click on the time to stop it, and click again to restart the timer.\\xA0\"),mdx(\"p\",null,\"When the time ends, the user will be prompted to take a break! It\\u2019s a very simple example, so the timer won\\u2019t restart.\"),mdx(\"h3\",null,\"Constants\"),mdx(\"p\",null,\"Let\\u2019s first define some of the constants we\\u2019re going to use:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"We define \",mdx(\"inlineCode\",{parentName:\"li\"},\"K\"),\" as we\\u2019re going to use this a lot, as we will be dealing with milliseconds, so we assign \",mdx(\"inlineCode\",{parentName:\"li\"},\"1000\"),\" as value\"),mdx(\"li\",{parentName:\"ul\"},\"The interval is the amount of time that needs to elapse in order to update the timer. If we set it to \",mdx(\"inlineCode\",{parentName:\"li\"},\"5000\"),\", the timer would be updated every 5 seconds\"),mdx(\"li\",{parentName:\"ul\"},\"We set the minutes we want our timer to be long and its time in milliseconds\")),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"K\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"1000\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"INTERVAL\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"K\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"MINUTES\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"25\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"TIME\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"MINUTES\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"*\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"K\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"*\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"60\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"h3\",null,\"State variables\"),mdx(\"p\",null,\"In order to keep the time\\u2019s state when pausing/resuming the timer, we define two variables:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"let\"),\" current\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"number\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"let\"),\" time \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"TIME\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"current\"),\" will be continually updated every second\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"time\"),\" will be updated when the timer stops\")),mdx(\"h3\",null,\"Helper functions\"),mdx(\"p\",null,\"We define some helper functions used by our streams. We want to:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"convert remaining time to milliseconds and seconds\"),mdx(\"li\",{parentName:\"ul\"},\"have functions to display remaining minutes and seconds\")),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"toMinutes\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"ms\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"number\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),`\n    Math`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"floor\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"ms \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"/\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"K\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"/\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"60\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"toSeconds\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"ms\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"number\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),`\n    Math`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"floor\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"ms \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"/\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"K\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"%\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"60\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"toSecondsString\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"ms\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"number\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" seconds \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"toSeconds\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"ms\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" seconds \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"10\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"?\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token template-string\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token template-punctuation string\"}),\"`\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),\"0\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token interpolation\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token interpolation-punctuation punctuation\"}),\"${\"),\"seconds\",mdx(\"span\",a({parentName:\"span\"},{className:\"token interpolation-punctuation punctuation\"}),\"}\")),mdx(\"span\",a({parentName:\"span\"},{className:\"token template-punctuation string\"}),\"`\")),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" seconds\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"toString\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"toMs\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"t\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"number\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" t \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"*\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"INTERVAL\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"currentInterval\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" time \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"/\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"INTERVAL\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"toRemainingSeconds\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"t\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"number\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"currentInterval\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\" t\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"h3\",null,\"Defining the Rx\\xA0streams\"),mdx(\"p\",null,\"First, we define the \",mdx(\"inlineCode\",{parentName:\"p\"},\"timer$\"),\" stream:\\xA0\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"we use the observable creator \",mdx(\"inlineCode\",{parentName:\"li\"},\"timer\"),\", that emits every \",mdx(\"inlineCode\",{parentName:\"li\"},\"INTERVAL\"),\" times, which basically means it will emit every second\")),mdx(\"p\",null,\"The stream will convert the milliseconds emitted from \",mdx(\"inlineCode\",{parentName:\"p\"},\"timer\"),\" to the remaining seconds.\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" toggle$ \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"new\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token class-name\"}),\"BehaviorSubject\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" remainingSeconds$ \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" toggle$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"pipe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"switchMap\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"running\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"boolean\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n        `,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"return\"),\" running \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"?\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"timer\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"0\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"INTERVAL\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token constant\"}),\"NEVER\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"map\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"toRemainingSeconds\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"takeWhile\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"t \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" t \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token number\"}),\"0\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"Let\\u2019s explain detail what this does:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-unknown\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-unknown\"}),`**toggle$** -&gt; true...false...true\n\n-----\n\n**switchMap** to:\n\n **if toggle is true -&gt; timer(0, INTERVAL = 1000)** -&gt; 0...1000...2000\n **if toggle is false ? -&gt;** NEVER = do not continue\n\n----\n\n**map(toRemainingSeconds)** -&gt; ms elapsed mapped to remaining seconds (ex. 1500)\n\n----\n\n**takeWhile(remainingSeconds)** -&gt; complete once **remainingSeconds$&#39;s** value  is no more &gt;= 0`))),mdx(\"p\",null,\"Let\\u2019s consider the operators used:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"the mapper \",mdx(\"inlineCode\",{parentName:\"li\"},\"toSeconds\"),\" will convert the milliseconds returned by the observable to the number of seconds that are remaining\"),mdx(\"li\",{parentName:\"ul\"},\"by using the operator \",mdx(\"inlineCode\",{parentName:\"li\"},\"takeWhile\"),\" we\\u2019re basically telling the \",mdx(\"inlineCode\",{parentName:\"li\"},\"remainingSeconds$\"),\" observable to keep going until the seconds remaining are greater or equal than 0\"),mdx(\"li\",{parentName:\"ul\"},\"After that, \",mdx(\"inlineCode\",{parentName:\"li\"},\"remainingSeconds$\"),\" will emit its completion callback that we can use to replace the timer with some other content\")),mdx(\"p\",null,\"Before creating the relative minutes and seconds we will be displaying, we want to be able to stop and resume and timer.\\xA0\"),mdx(\"p\",null,\"If \",mdx(\"inlineCode\",{parentName:\"p\"},\"toggle$\"),\" is emitted with \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),\" as value, the timer keeps running, while if it gets emitted with \",mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\" it will stop, as instead of mapping to \",mdx(\"inlineCode\",{parentName:\"p\"},\"remainingSeconds$\"),\" it will emit the observable \",mdx(\"inlineCode\",{parentName:\"p\"},\"NEVER\"),\"\\xA0.\"),mdx(\"h3\",null,\"Pausing and resuming the\\xA0timer\"),mdx(\"p\",null,\"By using \",mdx(\"inlineCode\",{parentName:\"p\"},\"fromEvent\"),\"\\xA0, we can listen to click events and update the behavior subject by toggling its current value.\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" toggleElement \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" document\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"querySelector\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'.timer'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"fromEvent\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"toggleElement\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \\u2018click\\u2019\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"subscribe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    toggle$`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"next\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"!\"),\"toggle$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"value\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"But \",mdx(\"inlineCode\",{parentName:\"p\"},\"toggle$\"),\" also does something else:\\xA0\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"every time the timer gets stopped, we want to update the time variable with the current time, so that the next time the timer restarts, it will restart from the current time.\")),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),\"toggle$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"pipe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"filter\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"toggled\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"boolean\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"!\"),\"toggled\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"subscribe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    time `,mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" current\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"Now, we can define the milliseconds observable we\\u2019re going to use to display minutes and seconds:\\xA0\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" ms$ \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" time$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"pipe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"map\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"toMs\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"tap\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"t \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" current \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" t\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"Every time \",mdx(\"inlineCode\",{parentName:\"p\"},\"ms$\"),\" emits, we use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"tap\"),\" operator to update the stateful variable \",mdx(\"inlineCode\",{parentName:\"p\"},\"current\"),\".\"),mdx(\"p\",null,\"Next, we\\u2019re going to define minutes and seconds by reusing the helper methods we defined earlier in the article.\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" minutes$ \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" ms$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"pipe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"map\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"toMinutesDisplay\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"map\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"s \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" s\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"toString\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"startWith\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"toMinutesDisplay\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"time\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"toString\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" seconds$ \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" ms$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"pipe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"map\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"toSecondsDisplayString\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"startWith\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"toSecondsDisplayString\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"time\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"toString\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,\"And that\\u2019s it! Our streams are ready and can now update the DOM.\"),mdx(\"h3\",null,\"Updating the\\xA0DOM\"),mdx(\"p\",null,\"We define a simple function called \",mdx(\"inlineCode\",{parentName:\"p\"},\"updateDom\"),\" that takes an observable as the first argument and an HTML element as the second one. Every time the source emits, it will update the \",mdx(\"inlineCode\",{parentName:\"p\"},\"innerHTML\"),\" of the node.\"),mdx(\"p\",null,\"HTML:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-html\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-html\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"div\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"class\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-value\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation attr-equals\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"'),\"timer\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"')),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"span\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"class\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-value\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation attr-equals\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"'),\"minutes\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"')),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"span\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"span\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),\":\",mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"span\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"<\"),\"span\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-name\"}),\"class\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token attr-value\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation attr-equals\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"'),\"seconds\",mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),'\"')),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"span\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token tag\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\"</\"),\"div\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token punctuation\"}),\">\")),`\n`))),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token comment\"}),\"// DOM nodes\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" minutesElement \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" document\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"querySelector\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'.minutes'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"const\"),\" secondsElement \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" document\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"querySelector\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'.seconds'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"updateDom\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"minutes$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" minutesElement\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"updateDom\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"seconds$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" secondsElement\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"function\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"updateDom\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"source$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" Observable\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"<\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin\"}),\"string\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" element\",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" Element\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    source$`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"subscribe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"value\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" element\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),\"innerHTML \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=\"),\" value\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"p\",null,\"Lastly, we want to display a message when the timer stops:\"),mdx(\"div\",a({},{className:\"remark-highlight\"}),mdx(\"pre\",a({parentName:\"div\"},{className:\"language-typescript\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-typescript\"}),\"timer$\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"subscribe\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"token function-variable function\"}),\"complete\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token operator\"}),\"=>\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token function\"}),\"updateDom\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"of\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),\"'Take a break!'\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" toggleElement\",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\";\"),`\n`))),mdx(\"p\",null,mdx(\"img\",a({parentName:\"p\"},{src:\"https://cdn-images-1.medium.com/max/1600/1*viwakc1HIU6SKXtrXgTLPw.gif\",alt:null}))),mdx(\"p\",null,\"You can find the complete code snippet on \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://medium.com/r/?url=https%3A%2F%2Fstackblitz.com%2Fedit%2Frxjs-rajp6s%3Ffile%3Dindex.ts\"}),\"Stackblitz\"),\".\"),mdx(\"p\",null,\"Hope you enjoyed the article and leave a message if you agree, disagree, or if you would do anything differently!\"),mdx(\"hr\",null),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"If you enjoyed this article, follow me on\"),\" \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://medium.com/@.gc\"}),mdx(\"em\",{parentName:\"a\"},\"Medium\")),\" \",mdx(\"em\",{parentName:\"p\"},\"or\"),\" \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://medium.com/r/?url=https%3A%2F%2Ftwitter.com%2Fhome\"}),mdx(\"em\",{parentName:\"a\"},\"Twitter\")),\" \",mdx(\"em\",{parentName:\"p\"},\"for more articles about Angular, RxJS, Typescript and more!\")))}MDXContent.isMDXComponent=!0;\n","scope":{}},"series":[],"morePosts":[{"live":true,"readingTime":"2 min read","title":"Testing RxJS timers with Jest","date":"2021-11-11T21:49:22.000Z","slug":"testing-rxjs-timers-with-jest","collection":{"name":"RxJs","primaryColor":"#d81b60","primaryColorLight":"#d81b6085","contrastColor":"#fff","logo":"/assets/images/collections/rxjs.webp","slug":"rxjs"}}],"moreArticles":[{"live":true,"readingTime":"5 min read","title":"A Reactive Enum with Typescript and RxJs","date":"2021-11-11T23:00:00.000Z","slug":"reactive-enum-typescript-rxjs","coverImage":"/assets/images/posts/reactive-enum-ts-rxjs.webp","collection":{"name":"RxJs","primaryColor":"#d81b60","primaryColorLight":"#d81b6085","contrastColor":"#fff","logo":"/assets/images/collections/rxjs.webp","slug":"rxjs"},"excerpt":"Typescript's template literals' types allow us to generate dynamic and typed code, together. In this article, I want to show how we can build a dynamic reactive enum with TS and RxJS","series":"","tags":["rxjs","typescript"]},{"live":true,"readingTime":"8 min read","title":"Caching RxJS streams into Web Storage","date":"2021-11-10T23:00:00.000Z","slug":"caching-rxjs-streams-into-web-storage","coverImage":"/assets/caching-rxjs-streams.webp","collection":{"name":"RxJs","primaryColor":"#d81b60","primaryColorLight":"#d81b6085","contrastColor":"#fff","logo":"/assets/images/collections/rxjs.webp","slug":"rxjs"},"excerpt":"In this article I will introduce you to a simple utility that allows you to cache RxJS streams in memory or the browser's storage","series":"","tags":["rxjs"]},{"live":true,"readingTime":"6 min read","title":"5 common mistakes with RxJS","date":"2020-08-03T00:00:00.322Z","slug":"five-common-mistakes-with-rxjs","coverImage":"https://miro.medium.com/max/1400/1*SZ7Ubdlu8CbNjvI8-LezVw.jpeg","collection":{"name":"RxJs","primaryColor":"#d81b60","primaryColorLight":"#d81b6085","contrastColor":"#fff","logo":"/assets/images/collections/rxjs.webp","slug":"rxjs"},"excerpt":"A list of common mistakes while using RxJS, and explanations on what to do instead","tags":["rxjs"]},{"live":true,"readingTime":"7 min read","title":"RxJS Subjects in Depth","date":"2019-10-15T00:00:00.000Z","slug":"rxjs-subjects-in-depth","coverImage":"https://cdn-images-1.medium.com/max/14720/0*15QkEYFTChBSrv-J","collection":{"name":"RxJs","primaryColor":"#d81b60","primaryColorLight":"#d81b6085","contrastColor":"#fff","logo":"/assets/images/collections/rxjs.webp","slug":"rxjs"},"excerpt":"Learn how RxJS Subjects are used in real-world applications","tags":["rxjs"]},{"live":true,"readingTime":"9 min read","title":"RxJS Patterns: Efficiency and Performance","date":"2019-09-16T00:00:00.000Z","slug":"rxjs-patterns-efficiency-and-performance","coverImage":"https://cdn-images-1.medium.com/max/8120/0*s2vR3V3jI171miko","collection":{"name":"RxJs","primaryColor":"#d81b60","primaryColorLight":"#d81b6085","contrastColor":"#fff","logo":"/assets/images/collections/rxjs.webp","slug":"rxjs"},"excerpt":"A rundown of all RxJS operators and techniques you can leverage to avoid needless computation and make your code snappier and faster","tags":["rxjs","performance"]}],"type":1},"__N_SSG":true}